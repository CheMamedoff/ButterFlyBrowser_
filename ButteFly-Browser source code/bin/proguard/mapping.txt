acr.browser.butterfly.AboutSettingsActivity -> acr.browser.butterfly.AboutSettingsActivity:
    int API -> a
    android.content.SharedPreferences mPreferences -> b
    int mEasterEggCounter -> c
    android.content.Context mContext -> d
    void onCreate(android.os.Bundle) -> onCreate
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void initialize() -> b
    void easterEgg() -> a
    void source(android.widget.RelativeLayout) -> a
    android.content.Context access$000(acr.browser.butterfly.AboutSettingsActivity) -> a
    int access$108(acr.browser.butterfly.AboutSettingsActivity) -> b
    int access$100(acr.browser.butterfly.AboutSettingsActivity) -> c
    int access$102(acr.browser.butterfly.AboutSettingsActivity,int) -> a
acr.browser.butterfly.AboutSettingsActivity$1 -> acr.browser.butterfly.a:
    acr.browser.butterfly.AboutSettingsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
acr.browser.butterfly.AboutSettingsActivity$2 -> acr.browser.butterfly.b:
    acr.browser.butterfly.AboutSettingsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
acr.browser.butterfly.AboutSettingsActivity$3 -> acr.browser.butterfly.c:
    acr.browser.butterfly.AboutSettingsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
acr.browser.butterfly.AdBlock -> acr.browser.butterfly.d:
    java.util.Set mBlockedDomainsList -> a
    android.content.SharedPreferences mPreferences -> b
    boolean mBlockAds -> c
    java.util.Locale mLocale -> d
    void updatePreference() -> a
    void loadBlockedDomainsList(android.content.Context) -> a
    boolean isAd(java.lang.String) -> a
    java.lang.String getDomainName(java.lang.String) -> b
    java.util.Locale access$000() -> b
    java.util.Set access$100() -> c
acr.browser.butterfly.AdBlock$1 -> acr.browser.butterfly.e:
    android.content.Context val$context -> a
    acr.browser.butterfly.AdBlock this$0 -> b
    void run() -> run
acr.browser.butterfly.AdvancedSettingsActivity -> acr.browser.butterfly.AdvancedSettingsActivity:
    int API -> a
    android.content.SharedPreferences mPreferences -> b
    android.content.SharedPreferences$Editor mEditPrefs -> c
    android.widget.CheckBox cbAllowPopups -> d
    android.widget.CheckBox cbAllowCookies -> e
    android.widget.CheckBox cbAllowIncognitoCookies -> f
    android.widget.CheckBox cbRestoreTabs -> g
    android.content.Context mContext -> h
    android.widget.TextView mRenderText -> i
    android.app.Activity mActivity -> j
    void onCreate(android.os.Bundle) -> onCreate
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void initialize() -> b
    void cbAllowPopups(android.widget.CheckBox) -> a
    void cbAllowCookies(android.widget.CheckBox) -> b
    void cbAllowIncognitoCookies(android.widget.CheckBox) -> c
    void cbRestoreTabs(android.widget.CheckBox) -> d
    void rAllowPopups(android.widget.RelativeLayout) -> a
    void rAllowCookies(android.widget.RelativeLayout) -> b
    void rAllowIncognitoCookies(android.widget.RelativeLayout) -> c
    void rRestoreTabs(android.widget.RelativeLayout) -> d
    void renderPicker() -> a
    android.content.SharedPreferences$Editor access$000(acr.browser.butterfly.AdvancedSettingsActivity) -> a
    android.widget.CheckBox access$100(acr.browser.butterfly.AdvancedSettingsActivity) -> b
    android.widget.CheckBox access$200(acr.browser.butterfly.AdvancedSettingsActivity) -> c
    android.widget.CheckBox access$300(acr.browser.butterfly.AdvancedSettingsActivity) -> d
    android.widget.CheckBox access$400(acr.browser.butterfly.AdvancedSettingsActivity) -> e
    android.app.Activity access$500(acr.browser.butterfly.AdvancedSettingsActivity) -> f
    android.content.Context access$600(acr.browser.butterfly.AdvancedSettingsActivity) -> g
    android.content.SharedPreferences access$700(acr.browser.butterfly.AdvancedSettingsActivity) -> h
    android.widget.TextView access$800(acr.browser.butterfly.AdvancedSettingsActivity) -> i
acr.browser.butterfly.AdvancedSettingsActivity$1 -> acr.browser.butterfly.f:
    acr.browser.butterfly.AdvancedSettingsActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
acr.browser.butterfly.AdvancedSettingsActivity$2 -> acr.browser.butterfly.g:
    acr.browser.butterfly.AdvancedSettingsActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
acr.browser.butterfly.AdvancedSettingsActivity$3 -> acr.browser.butterfly.h:
    acr.browser.butterfly.AdvancedSettingsActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
acr.browser.butterfly.AdvancedSettingsActivity$4 -> acr.browser.butterfly.i:
    acr.browser.butterfly.AdvancedSettingsActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
acr.browser.butterfly.AdvancedSettingsActivity$5 -> acr.browser.butterfly.j:
    acr.browser.butterfly.AdvancedSettingsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
acr.browser.butterfly.AdvancedSettingsActivity$6 -> acr.browser.butterfly.k:
    acr.browser.butterfly.AdvancedSettingsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
acr.browser.butterfly.AdvancedSettingsActivity$7 -> acr.browser.butterfly.l:
    acr.browser.butterfly.AdvancedSettingsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
acr.browser.butterfly.AdvancedSettingsActivity$8 -> acr.browser.butterfly.m:
    acr.browser.butterfly.AdvancedSettingsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
acr.browser.butterfly.AdvancedSettingsActivity$9 -> acr.browser.butterfly.n:
    acr.browser.butterfly.AdvancedSettingsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
acr.browser.butterfly.AdvancedSettingsActivity$9$1 -> acr.browser.butterfly.o:
    acr.browser.butterfly.AdvancedSettingsActivity$9 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
acr.browser.butterfly.AdvancedSettingsActivity$9$2 -> acr.browser.butterfly.p:
    acr.browser.butterfly.AdvancedSettingsActivity$9 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
acr.browser.butterfly.BookmarkActivity -> acr.browser.butterfly.BookmarkActivity:
    acr.browser.butterfly.BookmarkManager mBookmarkManager -> a
    boolean mSystemBrowser -> b
    android.content.SharedPreferences mPreferences -> c
    java.io.File[] mFileList -> d
    java.lang.String[] mFileNameList -> e
    java.io.File mPath -> f
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void loadFileList(java.io.File) -> a
    android.app.Dialog onCreateDialog(int) -> onCreateDialog
    java.io.File[] access$000(acr.browser.butterfly.BookmarkActivity) -> a
    void access$100(acr.browser.butterfly.BookmarkActivity,java.io.File) -> a
    java.lang.String[] access$200(acr.browser.butterfly.BookmarkActivity) -> b
    acr.browser.butterfly.BookmarkManager access$300(acr.browser.butterfly.BookmarkActivity) -> c
acr.browser.butterfly.BookmarkActivity$1 -> acr.browser.butterfly.q:
    android.app.AlertDialog$Builder val$builder -> a
    acr.browser.butterfly.BookmarkActivity this$0 -> b
    void onClick(android.content.DialogInterface,int) -> onClick
acr.browser.butterfly.BookmarkActivity$SortName -> acr.browser.butterfly.r:
    acr.browser.butterfly.BookmarkActivity this$0 -> a
    int compare(java.io.File,java.io.File) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
acr.browser.butterfly.BookmarkManager -> acr.browser.butterfly.s:
    android.content.Context mContext -> a
    java.util.SortedMap mBookmarkMap -> b
    boolean addBookmark(acr.browser.butterfly.HistoryItem) -> a
    void addBookmarkList(java.util.List) -> a
    boolean deleteBookmark(java.lang.String) -> a
    void exportBookmarks() -> a
    java.util.List getBookmarks(boolean) -> a
    java.util.SortedMap getBookmarkUrls() -> c
    void importBookmarksFromBrowser() -> b
    void importBookmarksFromFile(java.io.File) -> a
    void overwriteBookmarks(java.util.List) -> b
acr.browser.butterfly.BookmarkManager$1 -> acr.browser.butterfly.t:
acr.browser.butterfly.BookmarkManager$SortIgnoreCase -> acr.browser.butterfly.u:
    acr.browser.butterfly.BookmarkManager this$0 -> a
    int compare(acr.browser.butterfly.HistoryItem,acr.browser.butterfly.HistoryItem) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
acr.browser.butterfly.BookmarkPage -> acr.browser.butterfly.v:
    java.lang.String HEADING -> a
acr.browser.butterfly.BrowserActivity -> acr.browser.butterfly.BrowserActivity:
    android.support.v4.widget.DrawerLayout mDrawerLayout -> a
    android.widget.ListView mDrawerListLeft -> b
    android.widget.RelativeLayout mDrawerLeft -> c
    android.widget.LinearLayout mDrawerRight -> d
    android.widget.ListView mDrawerListRight -> e
    android.widget.RelativeLayout mNewTab -> f
    android.support.v4.app.ActionBarDrawerToggle mDrawerToggle -> g
    java.util.List mWebViews -> h
    acr.browser.butterfly.LightningView mCurrentView -> i
    int mIdGenerator -> j
    acr.browser.butterfly.BrowserActivity$LightningViewAdapter mTitleAdapter -> k
    java.util.List mBookmarkList -> l
    acr.browser.butterfly.BrowserActivity$BookmarkViewAdapter mBookmarkAdapter -> m
    android.widget.AutoCompleteTextView mSearch -> n
    acr.browser.butterfly.ClickHandler mClickHandler -> o
    android.widget.ProgressBar mProgressBar -> p
    boolean mSystemBrowser -> q
    android.webkit.ValueCallback mUploadMessage -> r
    android.view.View mCustomView -> s
    int mOriginalOrientation -> t
    int mActionBarSize -> u
    android.app.ActionBar mActionBar -> v
    boolean mFullScreen -> w
    android.widget.FrameLayout mBrowserFrame -> x
    acr.browser.butterfly.BrowserActivity$FullscreenHolder mFullscreenContainer -> y
    android.webkit.WebChromeClient$CustomViewCallback mCustomViewCallback -> z
    android.widget.FrameLayout$LayoutParams COVER_SCREEN_PARAMS -> A
    android.graphics.Bitmap mDefaultVideoPoster -> B
    android.view.View mVideoProgressView -> C
    acr.browser.butterfly.HistoryDatabaseHandler mHistoryHandler -> D
    android.content.SharedPreferences mPreferences -> E
    android.content.SharedPreferences$Editor mEditPrefs -> F
    android.content.Context mContext -> G
    android.graphics.Bitmap mWebpageBitmap -> H
    java.lang.String mSearchText -> I
    android.app.Activity mActivity -> J
    int API -> K
    android.graphics.drawable.Drawable mDeleteIcon -> L
    android.graphics.drawable.Drawable mRefreshIcon -> M
    android.graphics.drawable.Drawable mCopyIcon -> N
    android.graphics.drawable.Drawable mIcon -> O
    int mActionBarSizeDp -> P
    int mNumberIconColor -> Q
    java.lang.String mHomepage -> R
    boolean mIsNewIntent -> S
    android.widget.VideoView mVideoView -> T
    acr.browser.butterfly.SearchAdapter mSearchAdapter -> U
    android.view.ViewGroup$LayoutParams mMatchParent -> V
    acr.browser.butterfly.BookmarkManager mBookmarkManager -> W
    void onCreate(android.os.Bundle) -> onCreate
    void initialize() -> B
    boolean checkForTor() -> a
    void initializeTor() -> b
    void setNavigationDrawerWidth() -> c
    void initializeTabs() -> d
    void restoreOrNewTab() -> e
    void initializePreferences() -> f
    void updateCookiePreference() -> g
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void notifyBookmarkDataSetChanged() -> C
    void findInPage() -> D
    void showSearchInterfaceBar(java.lang.String) -> e
    void editBookmark(int) -> a
    void showTab(acr.browser.butterfly.LightningView) -> a
    void onNewIntent(android.content.Intent) -> onNewIntent
    void handleNewIntent(android.content.Intent) -> a
    void selectItem(int) -> d
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void newTab(java.lang.String,boolean) -> a
    void deleteTab(int) -> e
    boolean onKeyLongPress(int,android.view.KeyEvent) -> onKeyLongPress
    void clearHistory() -> h
    void clearCookies() -> i
    void onBackPressed() -> onBackPressed
    void onPause() -> onPause
    void saveOpenTabs() -> j
    void onDestroy() -> onDestroy
    void onResume() -> onResume
    void searchTheWeb(java.lang.String) -> a
    int pixelsToDp(int) -> f
    android.graphics.drawable.BitmapDrawable writeOnDrawable(int) -> b
    void getImage(android.widget.ImageView,acr.browser.butterfly.HistoryItem) -> a
    java.lang.String getDomainName(java.lang.String) -> b
    void updateUrl(java.lang.String) -> c
    void updateProgress(int) -> c
    void updateHistory(java.lang.String,java.lang.String) -> a
    void addItemToHistory(java.lang.String,java.lang.String) -> b
    boolean isSystemBrowserAvailable() -> k
    boolean getSystemBrowser() -> l
    void initializeSearchSuggestions(android.widget.AutoCompleteTextView) -> a
    boolean isIncognito() -> m
    void openHistory() -> E
    void openBookmarks() -> F
    void closeDrawers() -> n
    void openBookmarkPage(android.webkit.WebView) -> a
    void update() -> o
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onLongPress() -> p
    void onShowCustomView(android.view.View,int,android.webkit.WebChromeClient$CustomViewCallback) -> a
    void onHideCustomView() -> q
    void setFullscreen(boolean) -> a
    android.graphics.Bitmap getDefaultVideoPoster() -> r
    android.view.View getVideoLoadingProgressView() -> s
    void onCreateWindow(boolean,android.os.Message) -> a
    android.app.Activity getActivity() -> t
    void hideActionBar() -> u
    void showActionBar() -> v
    void longClickPage(java.lang.String) -> d
    void setIsLoading() -> w
    void setIsFinishedLoading() -> x
    void refreshOrStop() -> y
    void closeActivity() -> z
    acr.browser.butterfly.LightningView access$400(acr.browser.butterfly.BrowserActivity) -> a
    android.widget.ListView access$500(acr.browser.butterfly.BrowserActivity) -> b
    void access$600(acr.browser.butterfly.BrowserActivity,int) -> a
    android.widget.AutoCompleteTextView access$700(acr.browser.butterfly.BrowserActivity) -> c
    android.graphics.drawable.Drawable access$802(acr.browser.butterfly.BrowserActivity,android.graphics.drawable.Drawable) -> a
    android.graphics.drawable.Drawable access$900(acr.browser.butterfly.BrowserActivity) -> d
    android.graphics.drawable.Drawable access$800(acr.browser.butterfly.BrowserActivity) -> e
    android.content.Context access$1000(acr.browser.butterfly.BrowserActivity) -> f
    void access$1100(acr.browser.butterfly.BrowserActivity,android.widget.AutoCompleteTextView) -> a
    android.widget.RelativeLayout access$1200(acr.browser.butterfly.BrowserActivity) -> g
    android.widget.LinearLayout access$1300(acr.browser.butterfly.BrowserActivity) -> h
    android.support.v4.widget.DrawerLayout access$1400(acr.browser.butterfly.BrowserActivity) -> i
    android.content.SharedPreferences access$1500(acr.browser.butterfly.BrowserActivity) -> j
    android.content.SharedPreferences$Editor access$1600(acr.browser.butterfly.BrowserActivity) -> k
    void access$1700(acr.browser.butterfly.BrowserActivity,java.lang.String) -> a
    boolean access$1802(acr.browser.butterfly.BrowserActivity,boolean) -> a
    void access$1900(acr.browser.butterfly.BrowserActivity,int) -> b
    java.util.List access$2000(acr.browser.butterfly.BrowserActivity) -> l
    android.app.Activity access$2100(acr.browser.butterfly.BrowserActivity) -> m
    acr.browser.butterfly.BookmarkManager access$2200(acr.browser.butterfly.BrowserActivity) -> n
    void access$2300(acr.browser.butterfly.BrowserActivity) -> o
    acr.browser.butterfly.SearchAdapter access$2400() -> A
    void access$2500(acr.browser.butterfly.BrowserActivity) -> p
    android.graphics.Bitmap access$2600(acr.browser.butterfly.BrowserActivity) -> q
    android.widget.ProgressBar access$2700(acr.browser.butterfly.BrowserActivity) -> r
    acr.browser.butterfly.HistoryDatabaseHandler access$2800(acr.browser.butterfly.BrowserActivity) -> s
    acr.browser.butterfly.HistoryDatabaseHandler access$2802(acr.browser.butterfly.BrowserActivity,acr.browser.butterfly.HistoryDatabaseHandler) -> a
    int access$3000(acr.browser.butterfly.BrowserActivity) -> t
acr.browser.butterfly.BrowserActivity$1 -> acr.browser.butterfly.w:
    acr.browser.butterfly.BrowserActivity this$0 -> a
    void onClick(android.view.View) -> onClick
acr.browser.butterfly.BrowserActivity$10 -> acr.browser.butterfly.x:
    acr.browser.butterfly.BrowserActivity this$0 -> a
    boolean onLongClick(android.view.View) -> onLongClick
acr.browser.butterfly.BrowserActivity$11 -> acr.browser.butterfly.y:
    acr.browser.butterfly.BrowserActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
acr.browser.butterfly.BrowserActivity$12 -> acr.browser.butterfly.z:
    android.widget.EditText val$getHome -> a
    acr.browser.butterfly.BrowserActivity this$0 -> b
    void onClick(android.content.DialogInterface,int) -> onClick
acr.browser.butterfly.BrowserActivity$13 -> acr.browser.butterfly.aa:
    acr.browser.butterfly.BrowserActivity this$0 -> a
    void onClick(android.view.View) -> onClick
acr.browser.butterfly.BrowserActivity$14 -> acr.browser.butterfly.ab:
    acr.browser.butterfly.BrowserActivity this$0 -> a
    void onClick(android.view.View) -> onClick
acr.browser.butterfly.BrowserActivity$15 -> acr.browser.butterfly.ac:
    android.widget.RelativeLayout val$bar -> a
    acr.browser.butterfly.BrowserActivity this$0 -> b
    void onClick(android.view.View) -> onClick
acr.browser.butterfly.BrowserActivity$16 -> acr.browser.butterfly.ad:
    int val$id -> a
    android.widget.EditText val$getTitle -> b
    android.widget.EditText val$getUrl -> c
    acr.browser.butterfly.BrowserActivity this$0 -> d
    void onClick(android.content.DialogInterface,int) -> onClick
acr.browser.butterfly.BrowserActivity$17 -> acr.browser.butterfly.ae:
    acr.browser.butterfly.BrowserActivity this$0 -> a
    void run() -> run
acr.browser.butterfly.BrowserActivity$18 -> acr.browser.butterfly.af:
    acr.browser.butterfly.BrowserActivity this$0 -> a
    void run() -> run
acr.browser.butterfly.BrowserActivity$19 -> acr.browser.butterfly.ag:
    java.lang.String val$url -> a
    java.lang.String val$title -> b
    acr.browser.butterfly.BrowserActivity this$0 -> c
    void run() -> run
acr.browser.butterfly.BrowserActivity$2 -> acr.browser.butterfly.ah:
    acr.browser.butterfly.BrowserActivity this$0 -> a
    void onClick(android.view.View) -> onClick
acr.browser.butterfly.BrowserActivity$20 -> acr.browser.butterfly.ai:
    android.widget.AutoCompleteTextView val$getUrl -> a
    acr.browser.butterfly.BrowserActivity this$0 -> b
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
acr.browser.butterfly.BrowserActivity$21 -> acr.browser.butterfly.aj:
    acr.browser.butterfly.BrowserActivity this$0 -> a
    void run() -> run
acr.browser.butterfly.BrowserActivity$22 -> acr.browser.butterfly.ak:
    java.lang.String val$url -> a
    acr.browser.butterfly.BrowserActivity this$0 -> b
    void onClick(android.content.DialogInterface,int) -> onClick
acr.browser.butterfly.BrowserActivity$23 -> acr.browser.butterfly.al:
    java.lang.String val$url -> a
    acr.browser.butterfly.BrowserActivity this$0 -> b
    void onClick(android.content.DialogInterface,int) -> onClick
acr.browser.butterfly.BrowserActivity$24 -> acr.browser.butterfly.am:
    java.lang.String val$url -> a
    acr.browser.butterfly.BrowserActivity this$0 -> b
    void onClick(android.content.DialogInterface,int) -> onClick
acr.browser.butterfly.BrowserActivity$25 -> acr.browser.butterfly.an:
    java.lang.String val$newUrl -> a
    acr.browser.butterfly.BrowserActivity this$0 -> b
    void onClick(android.content.DialogInterface,int) -> onClick
acr.browser.butterfly.BrowserActivity$26 -> acr.browser.butterfly.ao:
    java.lang.String val$newUrl -> a
    acr.browser.butterfly.BrowserActivity this$0 -> b
    void onClick(android.content.DialogInterface,int) -> onClick
acr.browser.butterfly.BrowserActivity$3 -> acr.browser.butterfly.ap:
    acr.browser.butterfly.BrowserActivity this$0 -> a
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
acr.browser.butterfly.BrowserActivity$4 -> acr.browser.butterfly.aq:
    acr.browser.butterfly.BrowserActivity this$0 -> a
    void onFocusChange(android.view.View,boolean) -> onFocusChange
acr.browser.butterfly.BrowserActivity$5 -> acr.browser.butterfly.ar:
    acr.browser.butterfly.BrowserActivity this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
acr.browser.butterfly.BrowserActivity$6 -> acr.browser.butterfly.as:
    acr.browser.butterfly.BrowserActivity this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
acr.browser.butterfly.BrowserActivity$7 -> acr.browser.butterfly.at:
    acr.browser.butterfly.BrowserActivity this$0 -> a
    void run() -> run
acr.browser.butterfly.BrowserActivity$8 -> acr.browser.butterfly.au:
    acr.browser.butterfly.BrowserActivity this$0 -> a
    void onDrawerClosed(android.view.View) -> a
    void onDrawerOpened(android.view.View) -> b
acr.browser.butterfly.BrowserActivity$9 -> acr.browser.butterfly.av:
    acr.browser.butterfly.BrowserActivity this$0 -> a
    void onClick(android.view.View) -> onClick
acr.browser.butterfly.BrowserActivity$BookmarkItemClickListener -> acr.browser.butterfly.aw:
    acr.browser.butterfly.BrowserActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
acr.browser.butterfly.BrowserActivity$BookmarkItemClickListener$1 -> acr.browser.butterfly.ax:
    acr.browser.butterfly.BrowserActivity$BookmarkItemClickListener this$1 -> a
    void run() -> run
acr.browser.butterfly.BrowserActivity$BookmarkItemLongClickListener -> acr.browser.butterfly.ay:
    acr.browser.butterfly.BrowserActivity this$0 -> a
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
acr.browser.butterfly.BrowserActivity$BookmarkItemLongClickListener$1 -> acr.browser.butterfly.az:
    int val$position -> a
    acr.browser.butterfly.BrowserActivity$BookmarkItemLongClickListener this$1 -> b
    void onClick(android.content.DialogInterface,int) -> onClick
acr.browser.butterfly.BrowserActivity$BookmarkItemLongClickListener$2 -> acr.browser.butterfly.ba:
    int val$position -> a
    acr.browser.butterfly.BrowserActivity$BookmarkItemLongClickListener this$1 -> b
    void onClick(android.content.DialogInterface,int) -> onClick
acr.browser.butterfly.BrowserActivity$BookmarkItemLongClickListener$3 -> acr.browser.butterfly.bb:
    int val$position -> a
    acr.browser.butterfly.BrowserActivity$BookmarkItemLongClickListener this$1 -> b
    void onClick(android.content.DialogInterface,int) -> onClick
acr.browser.butterfly.BrowserActivity$BookmarkViewAdapter -> acr.browser.butterfly.bc:
    android.content.Context context -> a
    int layoutResourceId -> b
    java.util.List data -> c
    acr.browser.butterfly.BrowserActivity this$0 -> d
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
acr.browser.butterfly.BrowserActivity$BookmarkViewAdapter$BookmarkViewHolder -> acr.browser.butterfly.bd:
    android.widget.TextView txtTitle -> a
    android.widget.ImageView favicon -> b
    acr.browser.butterfly.BrowserActivity$BookmarkViewAdapter this$1 -> c
acr.browser.butterfly.BrowserActivity$DownloadImageTask -> acr.browser.butterfly.be:
    android.widget.ImageView bmImage -> a
    acr.browser.butterfly.HistoryItem mWeb -> b
    acr.browser.butterfly.BrowserActivity this$0 -> c
    android.graphics.Bitmap doInBackground(java.lang.String[]) -> a
    void onPostExecute(android.graphics.Bitmap) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
acr.browser.butterfly.BrowserActivity$DrawerItemClickListener -> acr.browser.butterfly.bf:
    acr.browser.butterfly.BrowserActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
acr.browser.butterfly.BrowserActivity$DrawerItemLongClickListener -> acr.browser.butterfly.bg:
    acr.browser.butterfly.BrowserActivity this$0 -> a
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
acr.browser.butterfly.BrowserActivity$FullscreenHolder -> acr.browser.butterfly.bh:
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
acr.browser.butterfly.BrowserActivity$LightningViewAdapter -> acr.browser.butterfly.bi:
    android.content.Context context -> a
    int layoutResourceId -> b
    java.util.List data -> c
    acr.browser.butterfly.BrowserActivity this$0 -> d
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
acr.browser.butterfly.BrowserActivity$LightningViewAdapter$1 -> acr.browser.butterfly.bj:
    int val$position -> a
    acr.browser.butterfly.BrowserActivity$LightningViewAdapter this$1 -> b
    void onClick(android.view.View) -> onClick
acr.browser.butterfly.BrowserActivity$LightningViewAdapter$LightningViewHolder -> acr.browser.butterfly.bk:
    android.widget.TextView txtTitle -> a
    android.widget.ImageView favicon -> b
    android.widget.ImageView exit -> c
    acr.browser.butterfly.BrowserActivity$LightningViewAdapter this$1 -> d
acr.browser.butterfly.BrowserActivity$SortIgnoreCase -> acr.browser.butterfly.bl:
    acr.browser.butterfly.BrowserActivity this$0 -> a
    int compare(acr.browser.butterfly.HistoryItem,acr.browser.butterfly.HistoryItem) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
acr.browser.butterfly.BrowserActivity$VideoCompletionListener -> acr.browser.butterfly.bm:
    acr.browser.butterfly.BrowserActivity this$0 -> a
    boolean onError(android.media.MediaPlayer,int,int) -> onError
    void onCompletion(android.media.MediaPlayer) -> onCompletion
acr.browser.butterfly.BrowserApp -> acr.browser.butterfly.BrowserApp:
    android.content.Context context -> a
    void onCreate() -> onCreate
    android.content.Context getAppContext() -> a
acr.browser.butterfly.BrowserController -> acr.browser.butterfly.bn:
    void updateUrl(java.lang.String) -> c
    void updateProgress(int) -> c
    void updateHistory(java.lang.String,java.lang.String) -> a
    void update() -> o
    void onLongPress() -> p
    void onShowCustomView(android.view.View,int,android.webkit.WebChromeClient$CustomViewCallback) -> a
    void onHideCustomView() -> q
    android.graphics.Bitmap getDefaultVideoPoster() -> r
    android.view.View getVideoLoadingProgressView() -> s
    void onCreateWindow(boolean,android.os.Message) -> a
    android.app.Activity getActivity() -> t
    void hideActionBar() -> u
    void showActionBar() -> v
    void longClickPage(java.lang.String) -> d
    void openBookmarkPage(android.webkit.WebView) -> a
    boolean isIncognito() -> m
acr.browser.butterfly.ClickHandler -> acr.browser.butterfly.bo:
    acr.browser.butterfly.BrowserController mBrowserController -> a
    void handleMessage(android.os.Message) -> handleMessage
acr.browser.butterfly.Constants -> acr.browser.butterfly.bp:
    int API -> a
    java.lang.String EXTERNAL_STORAGE -> b
acr.browser.butterfly.DisplaySettingsActivity -> acr.browser.butterfly.DisplaySettingsActivity:
    int API -> a
    android.content.SharedPreferences mPreferences -> b
    android.content.SharedPreferences$Editor mEditPrefs -> c
    android.widget.CheckBox cbHideStatusBar -> d
    android.widget.CheckBox cbFullScreen -> e
    android.widget.CheckBox cbWideViewPort -> f
    android.widget.CheckBox cbOverView -> g
    android.widget.CheckBox cbTextReflow -> h
    android.content.Context mContext -> i
    void onCreate(android.os.Bundle) -> onCreate
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void initialize() -> b
    void cbHideStatusBar(android.widget.CheckBox) -> a
    void cbFullScreen(android.widget.CheckBox) -> b
    void cbWideViewPort(android.widget.CheckBox) -> c
    void cbOverView(android.widget.CheckBox) -> d
    void cbTextReflow(android.widget.CheckBox) -> e
    void rHideStatusBar(android.widget.RelativeLayout) -> a
    void rFullScreen(android.widget.RelativeLayout) -> b
    void rWideViewPort(android.widget.RelativeLayout) -> c
    void rOverView(android.widget.RelativeLayout) -> d
    void rTextReflow(android.widget.RelativeLayout) -> e
    void rTextSize(android.widget.RelativeLayout) -> f
    android.content.SharedPreferences$Editor access$000(acr.browser.butterfly.DisplaySettingsActivity) -> a
    android.widget.CheckBox access$100(acr.browser.butterfly.DisplaySettingsActivity) -> b
    android.widget.CheckBox access$200(acr.browser.butterfly.DisplaySettingsActivity) -> c
    android.widget.CheckBox access$300(acr.browser.butterfly.DisplaySettingsActivity) -> d
    android.widget.CheckBox access$400(acr.browser.butterfly.DisplaySettingsActivity) -> e
    int access$500() -> a
    android.widget.CheckBox access$600(acr.browser.butterfly.DisplaySettingsActivity) -> f
    android.content.Context access$700(acr.browser.butterfly.DisplaySettingsActivity) -> g
    android.content.SharedPreferences access$800(acr.browser.butterfly.DisplaySettingsActivity) -> h
acr.browser.butterfly.DisplaySettingsActivity$1 -> acr.browser.butterfly.bq:
    acr.browser.butterfly.DisplaySettingsActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
acr.browser.butterfly.DisplaySettingsActivity$10 -> acr.browser.butterfly.br:
    acr.browser.butterfly.DisplaySettingsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
acr.browser.butterfly.DisplaySettingsActivity$11 -> acr.browser.butterfly.bs:
    acr.browser.butterfly.DisplaySettingsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
acr.browser.butterfly.DisplaySettingsActivity$11$1 -> acr.browser.butterfly.bt:
    acr.browser.butterfly.DisplaySettingsActivity$11 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
acr.browser.butterfly.DisplaySettingsActivity$11$2 -> acr.browser.butterfly.bu:
    acr.browser.butterfly.DisplaySettingsActivity$11 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
acr.browser.butterfly.DisplaySettingsActivity$2 -> acr.browser.butterfly.bv:
    acr.browser.butterfly.DisplaySettingsActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
acr.browser.butterfly.DisplaySettingsActivity$3 -> acr.browser.butterfly.bw:
    acr.browser.butterfly.DisplaySettingsActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
acr.browser.butterfly.DisplaySettingsActivity$4 -> acr.browser.butterfly.bx:
    acr.browser.butterfly.DisplaySettingsActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
acr.browser.butterfly.DisplaySettingsActivity$5 -> acr.browser.butterfly.by:
    acr.browser.butterfly.DisplaySettingsActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
acr.browser.butterfly.DisplaySettingsActivity$6 -> acr.browser.butterfly.bz:
    acr.browser.butterfly.DisplaySettingsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
acr.browser.butterfly.DisplaySettingsActivity$7 -> acr.browser.butterfly.ca:
    acr.browser.butterfly.DisplaySettingsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
acr.browser.butterfly.DisplaySettingsActivity$8 -> acr.browser.butterfly.cb:
    acr.browser.butterfly.DisplaySettingsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
acr.browser.butterfly.DisplaySettingsActivity$9 -> acr.browser.butterfly.cc:
    acr.browser.butterfly.DisplaySettingsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
acr.browser.butterfly.DownloadHandler -> acr.browser.butterfly.cd:
    android.app.Activity mActivity -> a
    void onDownloadStart(android.app.Activity,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean) -> a
    java.lang.String encodePath(java.lang.String) -> a
    void onDownloadStartNoStream(android.app.Activity,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean) -> b
acr.browser.butterfly.DownloadHandler$1 -> acr.browser.butterfly.ce:
    android.app.DownloadManager val$manager -> a
    android.app.DownloadManager$Request val$request -> b
    void run() -> run
acr.browser.butterfly.FetchUrlMimeType -> acr.browser.butterfly.cf:
    android.content.Context mContext -> a
    android.app.DownloadManager$Request mRequest -> b
    java.lang.String mUri -> c
    java.lang.String mCookies -> d
    java.lang.String mUserAgent -> e
    void run() -> run
acr.browser.butterfly.GeneralSettingsActivity -> acr.browser.butterfly.GeneralSettingsActivity:
    int API -> a
    android.content.SharedPreferences mPreferences -> b
    android.content.SharedPreferences$Editor mEditPrefs -> c
    int mAgentChoice -> d
    java.lang.String mHomepage -> e
    android.widget.TextView mAgentTextView -> f
    android.widget.TextView mDownloadTextView -> g
    java.lang.String mDownloadLocation -> h
    android.widget.TextView mHomepageText -> i
    android.widget.TextView mSearchText -> j
    android.widget.CheckBox cbSearchSuggestions -> k
    android.app.Activity mActivity -> l
    void onCreate(android.os.Bundle) -> onCreate
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void initialize() -> f
    void search() -> a
    void searchUrlPicker() -> b
    void agent(android.widget.RelativeLayout) -> a
    void agentPicker() -> c
    void download(android.widget.RelativeLayout) -> b
    void homePicker() -> d
    void downPicker() -> e
    void homepage(android.widget.RelativeLayout) -> c
    void cbSearchSuggestions(android.widget.CheckBox) -> a
    void rSearchSuggestions(android.widget.RelativeLayout) -> d
    android.app.Activity access$000(acr.browser.butterfly.GeneralSettingsActivity) -> a
    android.content.SharedPreferences access$100(acr.browser.butterfly.GeneralSettingsActivity) -> b
    android.content.SharedPreferences$Editor access$200(acr.browser.butterfly.GeneralSettingsActivity) -> c
    android.widget.TextView access$300(acr.browser.butterfly.GeneralSettingsActivity) -> d
    int access$402(acr.browser.butterfly.GeneralSettingsActivity,int) -> a
    int access$400(acr.browser.butterfly.GeneralSettingsActivity) -> e
    android.widget.TextView access$500(acr.browser.butterfly.GeneralSettingsActivity) -> f
    java.lang.String access$602(acr.browser.butterfly.GeneralSettingsActivity,java.lang.String) -> a
    java.lang.String access$600(acr.browser.butterfly.GeneralSettingsActivity) -> g
    android.widget.TextView access$700(acr.browser.butterfly.GeneralSettingsActivity) -> h
    android.widget.TextView access$800(acr.browser.butterfly.GeneralSettingsActivity) -> i
    java.lang.String access$902(acr.browser.butterfly.GeneralSettingsActivity,java.lang.String) -> b
    java.lang.String access$900(acr.browser.butterfly.GeneralSettingsActivity) -> j
    android.widget.CheckBox access$1000(acr.browser.butterfly.GeneralSettingsActivity) -> k
acr.browser.butterfly.GeneralSettingsActivity$1 -> acr.browser.butterfly.cg:
    acr.browser.butterfly.GeneralSettingsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
acr.browser.butterfly.GeneralSettingsActivity$1$1 -> acr.browser.butterfly.ch:
    acr.browser.butterfly.GeneralSettingsActivity$1 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
acr.browser.butterfly.GeneralSettingsActivity$1$2 -> acr.browser.butterfly.ci:
    acr.browser.butterfly.GeneralSettingsActivity$1 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
acr.browser.butterfly.GeneralSettingsActivity$10 -> acr.browser.butterfly.cj:
    acr.browser.butterfly.GeneralSettingsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
acr.browser.butterfly.GeneralSettingsActivity$2 -> acr.browser.butterfly.ck:
    android.widget.EditText val$getSearchUrl -> a
    acr.browser.butterfly.GeneralSettingsActivity this$0 -> b
    void onClick(android.content.DialogInterface,int) -> onClick
acr.browser.butterfly.GeneralSettingsActivity$3 -> acr.browser.butterfly.cl:
    acr.browser.butterfly.GeneralSettingsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
acr.browser.butterfly.GeneralSettingsActivity$3$1 -> acr.browser.butterfly.cm:
    acr.browser.butterfly.GeneralSettingsActivity$3 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
acr.browser.butterfly.GeneralSettingsActivity$3$2 -> acr.browser.butterfly.cn:
    acr.browser.butterfly.GeneralSettingsActivity$3 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
acr.browser.butterfly.GeneralSettingsActivity$3$3 -> acr.browser.butterfly.co:
    acr.browser.butterfly.GeneralSettingsActivity$3 this$1 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
acr.browser.butterfly.GeneralSettingsActivity$4 -> acr.browser.butterfly.cp:
    android.widget.EditText val$getAgent -> a
    acr.browser.butterfly.GeneralSettingsActivity this$0 -> b
    void onClick(android.content.DialogInterface,int) -> onClick
acr.browser.butterfly.GeneralSettingsActivity$5 -> acr.browser.butterfly.cq:
    acr.browser.butterfly.GeneralSettingsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
acr.browser.butterfly.GeneralSettingsActivity$5$1 -> acr.browser.butterfly.cr:
    acr.browser.butterfly.GeneralSettingsActivity$5 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
acr.browser.butterfly.GeneralSettingsActivity$5$2 -> acr.browser.butterfly.cs:
    acr.browser.butterfly.GeneralSettingsActivity$5 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
acr.browser.butterfly.GeneralSettingsActivity$6 -> acr.browser.butterfly.ct:
    android.widget.EditText val$getHome -> a
    acr.browser.butterfly.GeneralSettingsActivity this$0 -> b
    void onClick(android.content.DialogInterface,int) -> onClick
acr.browser.butterfly.GeneralSettingsActivity$7 -> acr.browser.butterfly.cu:
    android.widget.EditText val$getDownload -> a
    acr.browser.butterfly.GeneralSettingsActivity this$0 -> b
    void onClick(android.content.DialogInterface,int) -> onClick
acr.browser.butterfly.GeneralSettingsActivity$8 -> acr.browser.butterfly.cv:
    acr.browser.butterfly.GeneralSettingsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
acr.browser.butterfly.GeneralSettingsActivity$8$1 -> acr.browser.butterfly.cw:
    acr.browser.butterfly.GeneralSettingsActivity$8 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
acr.browser.butterfly.GeneralSettingsActivity$8$2 -> acr.browser.butterfly.cx:
    acr.browser.butterfly.GeneralSettingsActivity$8 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
acr.browser.butterfly.GeneralSettingsActivity$9 -> acr.browser.butterfly.cy:
    acr.browser.butterfly.GeneralSettingsActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
acr.browser.butterfly.HistoryDatabaseHandler -> acr.browser.butterfly.cz:
    android.database.sqlite.SQLiteDatabase mDatabase -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    boolean isOpen() -> a
    void close() -> close
    void visitHistoryItem(java.lang.String,java.lang.String) -> a
    java.util.List findItemsContaining(java.lang.String) -> a
    java.util.List getLastHundredItems() -> b
acr.browser.butterfly.HistoryItem -> acr.browser.butterfly.da:
    int mId -> a
    java.lang.String mUrl -> b
    java.lang.String mTitle -> c
    java.lang.String mFolder -> d
    android.graphics.Bitmap mBitmap -> e
    int mImageId -> f
    int mOrder -> g
    int getImageId() -> a
    void setID(int) -> a
    void setImageId(int) -> b
    void setBitmap(android.graphics.Bitmap) -> a
    void setFolder(java.lang.String) -> a
    void setOrder(int) -> c
    int getOrder() -> b
    java.lang.String getFolder() -> c
    android.graphics.Bitmap getBitmap() -> d
    java.lang.String getUrl() -> e
    void setUrl(java.lang.String) -> b
    java.lang.String getTitle() -> f
    void setTitle(java.lang.String) -> c
    java.lang.String toString() -> toString
    int compareTo(acr.browser.butterfly.HistoryItem) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int compareTo(java.lang.Object) -> compareTo
acr.browser.butterfly.HistoryPage -> acr.browser.butterfly.db:
    java.lang.String HEADING -> a
    java.lang.String getHistoryPage(android.content.Context) -> a
    java.util.List getWebHistory(android.content.Context) -> b
acr.browser.butterfly.HomepageVariables -> acr.browser.butterfly.dc:
    java.lang.String HEAD -> a
acr.browser.butterfly.IncognitoActivity -> acr.browser.butterfly.IncognitoActivity:
    android.content.SharedPreferences mPreferences -> a
    android.webkit.CookieManager mCookieManager -> b
    void onCreate(android.os.Bundle) -> onCreate
    void updateCookiePreference() -> g
    void initializeTabs() -> d
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onPause() -> onPause
    void updateHistory(java.lang.String,java.lang.String) -> a
    boolean isIncognito() -> m
    void closeActivity() -> z
acr.browser.butterfly.IntentUtils -> acr.browser.butterfly.dd:
    android.app.Activity mActivity -> b
    acr.browser.butterfly.BrowserController mController -> c
    java.util.regex.Pattern ACCEPTED_URI_SCHEMA -> a
    boolean startActivityForUrl(android.webkit.WebView,java.lang.String) -> a
    boolean isSpecializedHandlerAvailable(android.content.Intent) -> a
acr.browser.butterfly.LicenseActivity -> acr.browser.butterfly.LicenseActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    void actionView(java.lang.String) -> a
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
acr.browser.butterfly.LightningDownloadListener -> acr.browser.butterfly.de:
    android.app.Activity mActivity -> a
    void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long) -> onDownloadStart
    android.app.Activity access$000(acr.browser.butterfly.LightningDownloadListener) -> a
acr.browser.butterfly.LightningDownloadListener$1 -> acr.browser.butterfly.df:
    java.lang.String val$url -> a
    java.lang.String val$userAgent -> b
    java.lang.String val$contentDisposition -> c
    java.lang.String val$mimetype -> d
    acr.browser.butterfly.LightningDownloadListener this$0 -> e
    void onClick(android.content.DialogInterface,int) -> onClick
acr.browser.butterfly.LightningView -> acr.browser.butterfly.dg:
    acr.browser.butterfly.LightningView$Title mTitle -> a
    android.webkit.WebView mWebView -> b
    acr.browser.butterfly.BrowserController mBrowserController -> c
    android.view.GestureDetector mGestureDetector -> d
    android.app.Activity mActivity -> e
    android.webkit.WebSettings mSettings -> f
    int API -> g
    java.lang.String mHomepage -> h
    java.lang.String mDefaultUserAgent -> i
    android.graphics.Bitmap mWebpageBitmap -> j
    android.content.SharedPreferences mPreferences -> k
    acr.browser.butterfly.AdBlock mAdBlock -> l
    boolean isForegroundTab -> m
    acr.browser.butterfly.IntentUtils mIntentUtils -> n
    android.graphics.Paint mPaint -> o
    float[] mNegativeColorArray -> p
    java.lang.String getHomepage() -> a
    void initializePreferences(android.content.Context) -> a
    void initializeSettings(android.webkit.WebSettings,android.content.Context) -> a
    boolean isShown() -> b
    void onPause() -> c
    void onResume() -> d
    void setForegroundTab(boolean) -> a
    boolean isForegroundTab() -> e
    int getProgress() -> f
    void stopLoading() -> g
    void setHardwareRendering() -> h
    void setNormalRendering() -> i
    void setColorMode(int) -> a
    void pauseTimers() -> j
    void resumeTimers() -> k
    void requestFocus() -> l
    void setVisibility(int) -> b
    void clearCache(boolean) -> b
    void reload() -> m
    void find(java.lang.String) -> a
    void onDestroy() -> n
    void goBack() -> o
    java.lang.String getUserAgent() -> p
    void goForward() -> q
    boolean canGoBack() -> r
    boolean canGoForward() -> s
    android.webkit.WebView getWebView() -> t
    android.graphics.Bitmap getFavicon() -> u
    void loadUrl(java.lang.String) -> b
    java.lang.String getTitle() -> v
    java.lang.String getUrl() -> w
    acr.browser.butterfly.BrowserController access$100(acr.browser.butterfly.LightningView) -> a
    android.view.GestureDetector access$200(acr.browser.butterfly.LightningView) -> b
    acr.browser.butterfly.AdBlock access$300(acr.browser.butterfly.LightningView) -> c
    android.content.SharedPreferences access$400() -> x
    android.webkit.WebSettings access$500(acr.browser.butterfly.LightningView) -> d
    acr.browser.butterfly.LightningView$Title access$600(acr.browser.butterfly.LightningView) -> e
    android.graphics.Bitmap access$700() -> y
    android.webkit.WebView access$800(acr.browser.butterfly.LightningView) -> f
    acr.browser.butterfly.IntentUtils access$900(acr.browser.butterfly.LightningView) -> g
    android.app.Activity access$1000(acr.browser.butterfly.LightningView) -> h
acr.browser.butterfly.LightningView$1 -> acr.browser.butterfly.dh:
    float mLocation -> a
    float mY -> b
    int mAction -> c
    acr.browser.butterfly.LightningView this$0 -> d
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
acr.browser.butterfly.LightningView$CustomGestureListener -> acr.browser.butterfly.di:
    boolean mCanTriggerLongPress -> b
    acr.browser.butterfly.LightningView this$0 -> a
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onDoubleTapEvent(android.view.MotionEvent) -> onDoubleTapEvent
    void onShowPress(android.view.MotionEvent) -> onShowPress
acr.browser.butterfly.LightningView$LightningChromeClient -> acr.browser.butterfly.dj:
    android.content.Context mActivity -> a
    acr.browser.butterfly.LightningView this$0 -> b
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
    void onReceivedIcon(android.webkit.WebView,android.graphics.Bitmap) -> onReceivedIcon
    void onReceivedTitle(android.webkit.WebView,java.lang.String) -> onReceivedTitle
    void onGeolocationPermissionsShowPrompt(java.lang.String,android.webkit.GeolocationPermissions$Callback) -> onGeolocationPermissionsShowPrompt
    boolean onCreateWindow(android.webkit.WebView,boolean,boolean,android.os.Message) -> onCreateWindow
    void onCloseWindow(android.webkit.WebView) -> onCloseWindow
    android.graphics.Bitmap getDefaultVideoPoster() -> getDefaultVideoPoster
    android.view.View getVideoLoadingProgressView() -> getVideoLoadingProgressView
    void onHideCustomView() -> onHideCustomView
    void onShowCustomView(android.view.View,android.webkit.WebChromeClient$CustomViewCallback) -> onShowCustomView
    void onShowCustomView(android.view.View,int,android.webkit.WebChromeClient$CustomViewCallback) -> onShowCustomView
acr.browser.butterfly.LightningView$LightningChromeClient$1 -> acr.browser.butterfly.dk:
    android.webkit.GeolocationPermissions$Callback val$callback -> a
    java.lang.String val$origin -> b
    acr.browser.butterfly.LightningView$LightningChromeClient this$1 -> c
    void onClick(android.content.DialogInterface,int) -> onClick
acr.browser.butterfly.LightningView$LightningChromeClient$2 -> acr.browser.butterfly.dl:
    android.webkit.GeolocationPermissions$Callback val$callback -> a
    java.lang.String val$origin -> b
    acr.browser.butterfly.LightningView$LightningChromeClient this$1 -> c
    void onClick(android.content.DialogInterface,int) -> onClick
acr.browser.butterfly.LightningView$LightningWebClient -> acr.browser.butterfly.dm:
    android.content.Context mActivity -> a
    acr.browser.butterfly.LightningView this$0 -> b
    android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebView,java.lang.String) -> shouldInterceptRequest
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onReceivedHttpAuthRequest(android.webkit.WebView,android.webkit.HttpAuthHandler,java.lang.String,java.lang.String) -> onReceivedHttpAuthRequest
    void onScaleChanged(android.webkit.WebView,float,float) -> onScaleChanged
    void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
    void onFormResubmission(android.webkit.WebView,android.os.Message,android.os.Message) -> onFormResubmission
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
acr.browser.butterfly.LightningView$LightningWebClient$1 -> acr.browser.butterfly.dn:
    android.webkit.HttpAuthHandler val$handler -> a
    acr.browser.butterfly.LightningView$LightningWebClient this$1 -> b
    void onClick(android.content.DialogInterface,int) -> onClick
acr.browser.butterfly.LightningView$LightningWebClient$2 -> acr.browser.butterfly.do:
    android.widget.EditText val$name -> a
    android.widget.EditText val$password -> b
    android.webkit.HttpAuthHandler val$handler -> c
    acr.browser.butterfly.LightningView$LightningWebClient this$1 -> d
    void onClick(android.content.DialogInterface,int) -> onClick
acr.browser.butterfly.LightningView$LightningWebClient$3 -> acr.browser.butterfly.dp:
    android.webkit.SslErrorHandler val$handler -> a
    acr.browser.butterfly.LightningView$LightningWebClient this$1 -> b
    void onClick(android.content.DialogInterface,int) -> onClick
acr.browser.butterfly.LightningView$LightningWebClient$4 -> acr.browser.butterfly.dq:
    android.webkit.SslErrorHandler val$handler -> a
    acr.browser.butterfly.LightningView$LightningWebClient this$1 -> b
    void onClick(android.content.DialogInterface,int) -> onClick
acr.browser.butterfly.LightningView$LightningWebClient$5 -> acr.browser.butterfly.dr:
    android.os.Message val$dontResend -> a
    acr.browser.butterfly.LightningView$LightningWebClient this$1 -> b
    void onClick(android.content.DialogInterface,int) -> onClick
acr.browser.butterfly.LightningView$LightningWebClient$6 -> acr.browser.butterfly.ds:
    android.os.Message val$resend -> a
    acr.browser.butterfly.LightningView$LightningWebClient this$1 -> b
    void onClick(android.content.DialogInterface,int) -> onClick
acr.browser.butterfly.LightningView$Title -> acr.browser.butterfly.dt:
    android.graphics.Bitmap mFavicon -> b
    java.lang.String mTitle -> c
    android.graphics.Bitmap mDefaultIcon -> d
    acr.browser.butterfly.LightningView this$0 -> a
    void setFavicon(android.graphics.Bitmap) -> a
    void setTitle(java.lang.String) -> a
    java.lang.String getTitle() -> a
    android.graphics.Bitmap getFavicon() -> b
acr.browser.butterfly.MainActivity -> acr.browser.butterfly.MainActivity:
    android.content.SharedPreferences mPreferences -> a
    android.webkit.CookieManager mCookieManager -> b
    void onCreate(android.os.Bundle) -> onCreate
    void updateCookiePreference() -> g
    void initializeTabs() -> d
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onPause() -> onPause
    void updateHistory(java.lang.String,java.lang.String) -> a
    boolean isIncognito() -> m
    void closeActivity() -> z
acr.browser.butterfly.PrivacySettingsActivity -> acr.browser.butterfly.PrivacySettingsActivity:
    int API -> a
    android.content.SharedPreferences mPreferences -> b
    android.content.SharedPreferences$Editor mEditPrefs -> c
    android.widget.CheckBox cbLocation -> d
    android.widget.CheckBox cbSavePasswords -> e
    android.widget.CheckBox cbClearCacheExit -> f
    android.widget.CheckBox cbClearHistoryExit -> g
    android.widget.CheckBox cbClearCookiesExit -> h
    android.content.Context mContext -> i
    boolean mSystemBrowser -> j
    android.os.Handler messageHandler -> k
    void onCreate(android.os.Bundle) -> onCreate
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void initialize() -> d
    void cbLocation(android.widget.CheckBox) -> a
    void cbSavePasswords(android.widget.CheckBox) -> b
    void cbClearCacheExit(android.widget.CheckBox) -> c
    void cbClearHistoryExit(android.widget.CheckBox) -> d
    void cbClearCookiesExit(android.widget.CheckBox) -> e
    void rLocation(android.widget.RelativeLayout) -> a
    void rSavePasswords(android.widget.RelativeLayout) -> b
    void rClearCacheExit(android.widget.RelativeLayout) -> c
    void rClearHistoryExit(android.widget.RelativeLayout) -> d
    void rClearCookiesExit(android.widget.RelativeLayout) -> e
    void rClearHistory(android.widget.RelativeLayout) -> f
    void rClearCookies(android.widget.RelativeLayout) -> g
    void rClearCache(android.widget.RelativeLayout) -> h
    void clearCache() -> a
    void clearHistory() -> b
    void clearCookies() -> c
    android.content.SharedPreferences$Editor access$000(acr.browser.butterfly.PrivacySettingsActivity) -> a
    android.widget.CheckBox access$100(acr.browser.butterfly.PrivacySettingsActivity) -> b
    android.widget.CheckBox access$200(acr.browser.butterfly.PrivacySettingsActivity) -> c
    android.widget.CheckBox access$300(acr.browser.butterfly.PrivacySettingsActivity) -> d
    android.widget.CheckBox access$400(acr.browser.butterfly.PrivacySettingsActivity) -> e
    android.widget.CheckBox access$500(acr.browser.butterfly.PrivacySettingsActivity) -> f
acr.browser.butterfly.PrivacySettingsActivity$1 -> acr.browser.butterfly.du:
    android.widget.CheckBox val$cbSyncHistory -> a
    acr.browser.butterfly.PrivacySettingsActivity this$0 -> b
    void onClick(android.view.View) -> onClick
acr.browser.butterfly.PrivacySettingsActivity$10 -> acr.browser.butterfly.dv:
    acr.browser.butterfly.PrivacySettingsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
acr.browser.butterfly.PrivacySettingsActivity$11 -> acr.browser.butterfly.dw:
    acr.browser.butterfly.PrivacySettingsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
acr.browser.butterfly.PrivacySettingsActivity$12 -> acr.browser.butterfly.dx:
    acr.browser.butterfly.PrivacySettingsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
acr.browser.butterfly.PrivacySettingsActivity$13 -> acr.browser.butterfly.dy:
    acr.browser.butterfly.PrivacySettingsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
acr.browser.butterfly.PrivacySettingsActivity$13$1 -> acr.browser.butterfly.dz:
    acr.browser.butterfly.PrivacySettingsActivity$13 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
acr.browser.butterfly.PrivacySettingsActivity$13$2 -> acr.browser.butterfly.ea:
    acr.browser.butterfly.PrivacySettingsActivity$13 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
acr.browser.butterfly.PrivacySettingsActivity$13$2$1 -> acr.browser.butterfly.eb:
    acr.browser.butterfly.PrivacySettingsActivity$13$2 this$2 -> a
    void run() -> run
acr.browser.butterfly.PrivacySettingsActivity$14 -> acr.browser.butterfly.ec:
    acr.browser.butterfly.PrivacySettingsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
acr.browser.butterfly.PrivacySettingsActivity$14$1 -> acr.browser.butterfly.ed:
    acr.browser.butterfly.PrivacySettingsActivity$14 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
acr.browser.butterfly.PrivacySettingsActivity$14$2 -> acr.browser.butterfly.ee:
    acr.browser.butterfly.PrivacySettingsActivity$14 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
acr.browser.butterfly.PrivacySettingsActivity$14$2$1 -> acr.browser.butterfly.ef:
    acr.browser.butterfly.PrivacySettingsActivity$14$2 this$2 -> a
    void run() -> run
acr.browser.butterfly.PrivacySettingsActivity$15 -> acr.browser.butterfly.eg:
    acr.browser.butterfly.PrivacySettingsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
acr.browser.butterfly.PrivacySettingsActivity$2 -> acr.browser.butterfly.eh:
    acr.browser.butterfly.PrivacySettingsActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
acr.browser.butterfly.PrivacySettingsActivity$3 -> acr.browser.butterfly.ei:
    acr.browser.butterfly.PrivacySettingsActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
acr.browser.butterfly.PrivacySettingsActivity$4 -> acr.browser.butterfly.ej:
    acr.browser.butterfly.PrivacySettingsActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
acr.browser.butterfly.PrivacySettingsActivity$5 -> acr.browser.butterfly.ek:
    acr.browser.butterfly.PrivacySettingsActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
acr.browser.butterfly.PrivacySettingsActivity$6 -> acr.browser.butterfly.el:
    acr.browser.butterfly.PrivacySettingsActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
acr.browser.butterfly.PrivacySettingsActivity$7 -> acr.browser.butterfly.em:
    acr.browser.butterfly.PrivacySettingsActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
acr.browser.butterfly.PrivacySettingsActivity$8 -> acr.browser.butterfly.en:
    acr.browser.butterfly.PrivacySettingsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
acr.browser.butterfly.PrivacySettingsActivity$9 -> acr.browser.butterfly.eo:
    acr.browser.butterfly.PrivacySettingsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
acr.browser.butterfly.PrivacySettingsActivity$MessageHandler -> acr.browser.butterfly.ep:
    android.content.Context mHandlerContext -> a
    void handleMessage(android.os.Message) -> handleMessage
acr.browser.butterfly.ReplacingInputStream -> acr.browser.butterfly.eq:
    java.util.Deque inQueue -> a
    java.util.Deque outQueue -> b
    byte[] search -> c
    byte[] replacement -> d
    boolean isMatchFound() -> a
    void readAhead() -> b
    int read() -> read
    boolean markSupported() -> markSupported
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
acr.browser.butterfly.SearchAdapter -> acr.browser.butterfly.er:
    java.util.List mHistory -> a
    java.util.List mBookmarks -> b
    java.util.List mSuggestions -> c
    java.util.List mFilteredList -> d
    java.util.List mAllBookmarks -> e
    acr.browser.butterfly.HistoryDatabaseHandler mDatabaseHandler -> f
    android.content.SharedPreferences mPreferences -> g
    boolean mUseGoogle -> h
    android.content.Context mContext -> i
    boolean mIncognito -> j
    acr.browser.butterfly.BookmarkManager mBookmarkManager -> k
    org.xmlpull.v1.XmlPullParserFactory mFactory -> l
    org.xmlpull.v1.XmlPullParser mXpp -> m
    java.lang.String mSearchSubtitle -> n
    void refreshPreferences() -> a
    void refreshBookmarks() -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.widget.Filter getFilter() -> getFilter
    boolean isNetworkConnected(android.content.Context) -> a
    android.net.NetworkInfo getActiveNetworkInfo(android.content.Context) -> b
    java.util.List getSuggestions() -> c
    boolean access$100(acr.browser.butterfly.SearchAdapter) -> a
    boolean access$200(acr.browser.butterfly.SearchAdapter) -> b
    java.util.List access$402(acr.browser.butterfly.SearchAdapter,java.util.List) -> a
    java.util.List access$500(acr.browser.butterfly.SearchAdapter) -> c
    java.util.List access$400(acr.browser.butterfly.SearchAdapter) -> d
    acr.browser.butterfly.HistoryDatabaseHandler access$600(acr.browser.butterfly.SearchAdapter) -> e
    acr.browser.butterfly.HistoryDatabaseHandler access$602(acr.browser.butterfly.SearchAdapter,acr.browser.butterfly.HistoryDatabaseHandler) -> a
    android.content.Context access$700(acr.browser.butterfly.SearchAdapter) -> f
    java.util.List access$802(acr.browser.butterfly.SearchAdapter,java.util.List) -> b
    java.util.List access$800(acr.browser.butterfly.SearchAdapter) -> g
    java.util.List access$900(acr.browser.butterfly.SearchAdapter) -> h
    java.util.List access$1000(acr.browser.butterfly.SearchAdapter) -> i
    java.util.List access$1002(acr.browser.butterfly.SearchAdapter,java.util.List) -> c
    boolean access$1100(acr.browser.butterfly.SearchAdapter,android.content.Context) -> a
    org.xmlpull.v1.XmlPullParserFactory access$1200(acr.browser.butterfly.SearchAdapter) -> j
    org.xmlpull.v1.XmlPullParserFactory access$1202(acr.browser.butterfly.SearchAdapter,org.xmlpull.v1.XmlPullParserFactory) -> a
    org.xmlpull.v1.XmlPullParser access$1300(acr.browser.butterfly.SearchAdapter) -> k
    org.xmlpull.v1.XmlPullParser access$1302(acr.browser.butterfly.SearchAdapter,org.xmlpull.v1.XmlPullParser) -> a
    java.lang.String access$1400(acr.browser.butterfly.SearchAdapter) -> l
    java.util.List access$902(acr.browser.butterfly.SearchAdapter,java.util.List) -> d
acr.browser.butterfly.SearchAdapter$1 -> acr.browser.butterfly.es:
acr.browser.butterfly.SearchAdapter$RetrieveSearchSuggestions -> acr.browser.butterfly.et:
    acr.browser.butterfly.SearchAdapter this$0 -> a
    java.util.List doInBackground(java.lang.String[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
acr.browser.butterfly.SearchAdapter$SearchFilter -> acr.browser.butterfly.eu:
    acr.browser.butterfly.SearchAdapter this$0 -> a
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
acr.browser.butterfly.SearchAdapter$SuggestionHolder -> acr.browser.butterfly.ev:
    android.widget.ImageView mImage -> a
    android.widget.TextView mTitle -> b
    android.widget.TextView mUrl -> c
    acr.browser.butterfly.SearchAdapter this$0 -> d
acr.browser.butterfly.SettingsActivity -> acr.browser.butterfly.SettingsActivity:
    int API -> a
    android.content.SharedPreferences$Editor mEditPrefs -> b
    android.content.SharedPreferences mPreferences -> c
    android.content.Context mContext -> d
    android.app.Activity mActivity -> e
    void onCreate(android.os.Bundle) -> onCreate
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void init() -> a
    void clickListenerForSwitches(android.widget.RelativeLayout,android.widget.RelativeLayout,android.widget.RelativeLayout,android.widget.RelativeLayout,android.widget.RelativeLayout,android.widget.Switch,android.widget.Switch,android.widget.Switch,android.widget.Switch,android.widget.Switch) -> a
    void initSwitch(android.widget.Switch,android.widget.Switch,android.widget.Switch,android.widget.Switch,android.widget.Switch) -> a
    void getFlashChoice() -> c
    void general(android.widget.RelativeLayout) -> a
    void display(android.widget.RelativeLayout) -> b
    void privacy(android.widget.RelativeLayout) -> c
    void advanced(android.widget.RelativeLayout) -> d
    void about(android.widget.RelativeLayout) -> e
    android.content.Context access$000(acr.browser.butterfly.SettingsActivity) -> a
    int access$100() -> b
    void access$200(acr.browser.butterfly.SettingsActivity) -> b
    android.content.SharedPreferences$Editor access$300(acr.browser.butterfly.SettingsActivity) -> c
acr.browser.butterfly.SettingsActivity$1 -> acr.browser.butterfly.ew:
    acr.browser.butterfly.SettingsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
acr.browser.butterfly.SettingsActivity$10 -> acr.browser.butterfly.ex:
    acr.browser.butterfly.SettingsActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
acr.browser.butterfly.SettingsActivity$11 -> acr.browser.butterfly.ey:
    acr.browser.butterfly.SettingsActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
acr.browser.butterfly.SettingsActivity$12 -> acr.browser.butterfly.ez:
    acr.browser.butterfly.SettingsActivity this$0 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
acr.browser.butterfly.SettingsActivity$13 -> acr.browser.butterfly.fa:
    acr.browser.butterfly.SettingsActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
acr.browser.butterfly.SettingsActivity$14 -> acr.browser.butterfly.fb:
    acr.browser.butterfly.SettingsActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
acr.browser.butterfly.SettingsActivity$19 -> acr.browser.butterfly.fc:
    acr.browser.butterfly.SettingsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
acr.browser.butterfly.SettingsActivity$2 -> acr.browser.butterfly.fd:
    android.widget.Switch val$flash -> a
    acr.browser.butterfly.SettingsActivity this$0 -> b
    void onClick(android.view.View) -> onClick
acr.browser.butterfly.SettingsActivity$20 -> acr.browser.butterfly.fe:
    acr.browser.butterfly.SettingsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
acr.browser.butterfly.SettingsActivity$21 -> acr.browser.butterfly.ff:
    acr.browser.butterfly.SettingsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
acr.browser.butterfly.SettingsActivity$22 -> acr.browser.butterfly.fg:
    acr.browser.butterfly.SettingsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
acr.browser.butterfly.SettingsActivity$23 -> acr.browser.butterfly.fh:
    acr.browser.butterfly.SettingsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
acr.browser.butterfly.SettingsActivity$3 -> acr.browser.butterfly.fi:
    android.widget.Switch val$adblock -> a
    acr.browser.butterfly.SettingsActivity this$0 -> b
    void onClick(android.view.View) -> onClick
acr.browser.butterfly.SettingsActivity$4 -> acr.browser.butterfly.fj:
    android.widget.Switch val$images -> a
    acr.browser.butterfly.SettingsActivity this$0 -> b
    void onClick(android.view.View) -> onClick
acr.browser.butterfly.SettingsActivity$5 -> acr.browser.butterfly.fk:
    android.widget.Switch val$enablejs -> a
    acr.browser.butterfly.SettingsActivity this$0 -> b
    void onClick(android.view.View) -> onClick
acr.browser.butterfly.SettingsActivity$6 -> acr.browser.butterfly.fl:
    android.widget.Switch val$orbot -> a
    acr.browser.butterfly.SettingsActivity this$0 -> b
    void onClick(android.view.View) -> onClick
acr.browser.butterfly.SettingsActivity$7 -> acr.browser.butterfly.fm:
    acr.browser.butterfly.SettingsActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
acr.browser.butterfly.SettingsActivity$8 -> acr.browser.butterfly.fn:
    acr.browser.butterfly.SettingsActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
acr.browser.butterfly.SettingsActivity$9 -> acr.browser.butterfly.fo:
    acr.browser.butterfly.SettingsActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
acr.browser.butterfly.Utils -> acr.browser.butterfly.fp:
    void downloadFile(android.app.Activity,java.lang.String,java.lang.String,java.lang.String,boolean) -> a
    android.content.Intent newEmailIntent(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void createInformativeDialog(android.content.Context,java.lang.String,java.lang.String) -> a
    void showToast(android.content.Context,java.lang.String) -> a
    int convertToDensityPixels(android.content.Context,int) -> a
    java.lang.String getDomainName(java.lang.String) -> a
    java.util.List getOldBookmarks(android.content.Context) -> a
    java.lang.String[] getArray(java.lang.String) -> b
    void trimCache(android.content.Context) -> b
    boolean deleteDir(java.io.File) -> a
acr.browser.butterfly.Utils$1 -> acr.browser.butterfly.fq:
    void onClick(android.content.DialogInterface,int) -> onClick
acr.browser.butterfly.WebAddress -> acr.browser.butterfly.fr:
    java.lang.String mScheme -> b
    java.lang.String mHost -> c
    int mPort -> d
    java.lang.String mPath -> e
    java.lang.String mAuthInfo -> f
    java.util.regex.Pattern sAddressPattern -> a
    java.lang.String toString() -> toString
    java.lang.String getHost() -> a
    void setPath(java.lang.String) -> a
    java.lang.String getPath() -> b
android.support.v4.app.ActionBarDrawerToggle -> android.support.v4.app.a:
    android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl IMPL -> a
    android.app.Activity mActivity -> b
    android.support.v4.app.ActionBarDrawerToggle$Delegate mActivityImpl -> c
    android.support.v4.widget.DrawerLayout mDrawerLayout -> d
    boolean mDrawerIndicatorEnabled -> e
    boolean mHasCustomUpIndicator -> f
    android.graphics.drawable.Drawable mHomeAsUpIndicator -> g
    android.graphics.drawable.Drawable mDrawerImage -> h
    android.support.v4.app.ActionBarDrawerToggle$SlideDrawable mSlider -> i
    int mDrawerImageResource -> j
    int mOpenDrawerContentDescRes -> k
    int mCloseDrawerContentDescRes -> l
    java.lang.Object mSetIndicatorInfo -> m
    boolean assumeMaterial(android.content.Context) -> a
    void syncState() -> a
    void onConfigurationChanged(android.content.res.Configuration) -> a
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onDrawerSlide(android.view.View,float) -> a
    void onDrawerOpened(android.view.View) -> b
    void onDrawerClosed(android.view.View) -> a
    void onDrawerStateChanged(int) -> a
    android.graphics.drawable.Drawable getThemeUpIndicator() -> b
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> a
    void setActionBarDescription(int) -> b
    android.app.Activity access$400(android.support.v4.app.ActionBarDrawerToggle) -> a
android.support.v4.app.ActionBarDrawerToggle$1 -> android.support.v4.app.b:
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl -> android.support.v4.app.c:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> a
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> a
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> a
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase -> android.support.v4.app.d:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> a
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> a
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> a
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC -> android.support.v4.app.e:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> a
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> a
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> a
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplJellybeanMR2 -> android.support.v4.app.f:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> a
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> a
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> a
android.support.v4.app.ActionBarDrawerToggle$Delegate -> android.support.v4.app.g:
    android.graphics.drawable.Drawable getThemeUpIndicator() -> a
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> a
    void setActionBarDescription(int) -> a
android.support.v4.app.ActionBarDrawerToggle$DelegateProvider -> android.support.v4.app.h:
    android.support.v4.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> a
android.support.v4.app.ActionBarDrawerToggle$SlideDrawable -> android.support.v4.app.i:
    boolean mHasMirroring -> b
    android.graphics.Rect mTmpRect -> c
    float mPosition -> d
    float mOffset -> e
    android.support.v4.app.ActionBarDrawerToggle this$0 -> a
    void setPosition(float) -> a
    float getPosition() -> a
    void setOffset(float) -> b
    void draw(android.graphics.Canvas) -> draw
android.support.v4.app.ActionBarDrawerToggleHoneycomb -> android.support.v4.app.j:
    int[] THEME_ATTRS -> a
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> a
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> a
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> a
android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo -> android.support.v4.app.k:
    java.lang.reflect.Method setHomeAsUpIndicator -> a
    java.lang.reflect.Method setHomeActionContentDescription -> b
    android.widget.ImageView upIndicatorView -> c
android.support.v4.app.ActionBarDrawerToggleJellybeanMR2 -> android.support.v4.app.l:
    int[] THEME_ATTRS -> a
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> a
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> a
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> a
android.support.v4.app.ActivityCompat -> android.support.v4.app.m:
    void finishAfterTransition(android.app.Activity) -> a
android.support.v4.app.ActivityCompat21 -> android.support.v4.app.n:
    void finishAfterTransition(android.app.Activity) -> a
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.o:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.p:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.util.ArrayList mSharedElementSourceNames -> t
    java.util.ArrayList mSharedElementTargetNames -> u
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitInternal(boolean) -> a
    void run() -> run
    void setFirstOut(android.util.SparseArray,android.support.v4.app.Fragment) -> a
    void setLastIn(android.util.SparseArray,android.support.v4.app.Fragment) -> b
    void calculateFragments(android.util.SparseArray,android.util.SparseArray) -> b
    void calculateBackFragments(android.util.SparseArray,android.util.SparseArray) -> a
    android.support.v4.app.BackStackRecord$TransitionState popFromBackStack(boolean,android.support.v4.app.BackStackRecord$TransitionState,android.util.SparseArray,android.util.SparseArray) -> a
    java.lang.String getName() -> b
    android.support.v4.app.BackStackRecord$TransitionState beginTransition(android.util.SparseArray,android.util.SparseArray,boolean) -> a
    java.lang.Object getEnterTransition(android.support.v4.app.Fragment,boolean) -> a
    java.lang.Object getExitTransition(android.support.v4.app.Fragment,boolean) -> b
    java.lang.Object getSharedElementTransition(android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean) -> a
    java.lang.Object captureExitingViews(java.lang.Object,android.support.v4.app.Fragment,java.util.ArrayList,android.support.v4.util.ArrayMap) -> a
    android.support.v4.util.ArrayMap remapSharedElements(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,boolean) -> a
    boolean configureTransitions(int,android.support.v4.app.BackStackRecord$TransitionState,boolean,android.util.SparseArray,android.util.SparseArray) -> a
    void prepareSharedElementTransition(android.support.v4.app.BackStackRecord$TransitionState,android.view.View,java.lang.Object,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,java.util.ArrayList) -> a
    void callSharedElementEnd(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,android.support.v4.util.ArrayMap) -> a
    void setEpicenterIn(android.support.v4.util.ArrayMap,android.support.v4.app.BackStackRecord$TransitionState) -> a
    android.support.v4.util.ArrayMap mapSharedElementsIn(android.support.v4.app.BackStackRecord$TransitionState,boolean,android.support.v4.app.Fragment) -> a
    android.support.v4.util.ArrayMap remapNames(java.util.ArrayList,java.util.ArrayList,android.support.v4.util.ArrayMap) -> a
    android.support.v4.util.ArrayMap mapEnteringSharedElements(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,boolean) -> b
    void excludeHiddenFragmentsAfterEnter(android.view.View,android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object) -> a
    void excludeHiddenFragments(android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object) -> a
    void setNameOverride(android.support.v4.util.ArrayMap,java.lang.String,java.lang.String) -> a
    void setNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,java.util.ArrayList,java.util.ArrayList) -> a
    void setBackNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.util.ArrayMap,boolean) -> a
    void setNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.util.ArrayMap,boolean) -> b
    android.support.v4.util.ArrayMap access$000(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$TransitionState,boolean,android.support.v4.app.Fragment) -> a
    void access$100(android.support.v4.app.BackStackRecord,android.support.v4.util.ArrayMap,android.support.v4.app.BackStackRecord$TransitionState) -> a
    void access$200(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,android.support.v4.util.ArrayMap) -> a
    void access$300(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object) -> a
android.support.v4.app.BackStackRecord$1 -> android.support.v4.app.q:
    android.support.v4.app.Fragment val$inFragment -> a
    android.support.v4.app.BackStackRecord this$0 -> b
    android.view.View getView() -> a
android.support.v4.app.BackStackRecord$2 -> android.support.v4.app.r:
    android.view.View val$sceneRoot -> a
    java.lang.Object val$sharedElementTransition -> b
    java.util.ArrayList val$sharedElementTargets -> c
    android.support.v4.app.BackStackRecord$TransitionState val$state -> d
    boolean val$isBack -> e
    android.support.v4.app.Fragment val$inFragment -> f
    android.support.v4.app.Fragment val$outFragment -> g
    android.support.v4.app.BackStackRecord this$0 -> h
    boolean onPreDraw() -> onPreDraw
android.support.v4.app.BackStackRecord$3 -> android.support.v4.app.s:
    android.view.View val$sceneRoot -> a
    android.support.v4.app.BackStackRecord$TransitionState val$state -> b
    int val$containerId -> c
    java.lang.Object val$transition -> d
    android.support.v4.app.BackStackRecord this$0 -> e
    boolean onPreDraw() -> onPreDraw
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.t:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackRecord$TransitionState -> android.support.v4.app.u:
    android.support.v4.util.ArrayMap nameOverrides -> a
    java.util.ArrayList hiddenFragmentViews -> b
    android.support.v4.app.FragmentTransitionCompat21$EpicenterView enteringEpicenterView -> c
    android.view.View nonExistentView -> d
    android.support.v4.app.BackStackRecord this$0 -> e
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    java.util.ArrayList mSharedElementSourceNames -> j
    java.util.ArrayList mSharedElementTargetNames -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.v:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    android.support.v4.util.SimpleArrayMap sClassMap -> aa
    java.lang.Object USE_DEFAULT_TRANSITION -> a
    int mState -> b
    android.view.View mAnimatingAway -> c
    int mStateAfterAnimating -> d
    android.os.Bundle mSavedFragmentState -> e
    android.util.SparseArray mSavedViewState -> f
    int mIndex -> g
    java.lang.String mWho -> h
    android.os.Bundle mArguments -> i
    android.support.v4.app.Fragment mTarget -> j
    int mTargetIndex -> k
    int mTargetRequestCode -> l
    boolean mAdded -> m
    boolean mRemoving -> n
    boolean mResumed -> o
    boolean mFromLayout -> p
    boolean mInLayout -> q
    boolean mRestored -> r
    int mBackStackNesting -> s
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> t
    android.support.v4.app.FragmentActivity mActivity -> u
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> v
    android.support.v4.app.Fragment mParentFragment -> w
    int mFragmentId -> x
    int mContainerId -> y
    java.lang.String mTag -> z
    boolean mHidden -> A
    boolean mDetached -> B
    boolean mRetainInstance -> C
    boolean mRetaining -> D
    boolean mHasMenu -> E
    boolean mMenuVisible -> F
    boolean mCalled -> G
    int mNextAnim -> H
    android.view.ViewGroup mContainer -> I
    android.view.View mView -> J
    android.view.View mInnerView -> K
    boolean mDeferStart -> L
    boolean mUserVisibleHint -> M
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> N
    boolean mLoadersStarted -> O
    boolean mCheckedForLoaderManager -> P
    java.lang.Object mEnterTransition -> Q
    java.lang.Object mReturnTransition -> R
    java.lang.Object mExitTransition -> S
    java.lang.Object mReenterTransition -> T
    java.lang.Object mSharedElementEnterTransition -> U
    java.lang.Object mSharedElementReturnTransition -> V
    java.lang.Boolean mAllowReturnTransitionOverlap -> W
    java.lang.Boolean mAllowEnterTransitionOverlap -> X
    android.support.v4.app.SharedElementCallback mEnterTransitionCallback -> Y
    android.support.v4.app.SharedElementCallback mExitTransitionCallback -> Z
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> b
    void restoreViewState(android.os.Bundle) -> a
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    android.support.v4.app.FragmentActivity getActivity() -> b
    android.content.res.Resources getResources() -> c
    android.support.v4.app.FragmentManager getChildFragmentManager() -> d
    boolean isAdded() -> e
    boolean isDetached() -> f
    boolean isHidden() -> g
    void onHiddenChanged(boolean) -> a
    void onActivityResult(int,int,android.content.Intent) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    void onCreate(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    android.view.View getView() -> h
    void onActivityCreated(android.os.Bundle) -> d
    void onViewStateRestored(android.os.Bundle) -> e
    void onStart() -> i
    void onResume() -> j
    void onSaveInstanceState(android.os.Bundle) -> f
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> k
    void onStop() -> l
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> m
    void onDestroy() -> n
    void initState() -> o
    void onDetach() -> p
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    void onDestroyOptionsMenu() -> q
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onOptionsMenuClosed(android.view.Menu) -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    java.lang.Object getEnterTransition() -> r
    java.lang.Object getReturnTransition() -> s
    java.lang.Object getExitTransition() -> t
    java.lang.Object getReenterTransition() -> u
    java.lang.Object getSharedElementEnterTransition() -> v
    java.lang.Object getSharedElementReturnTransition() -> w
    boolean getAllowEnterTransitionOverlap() -> x
    boolean getAllowReturnTransitionOverlap() -> y
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void instantiateChildFragmentManager() -> z
    void performCreate(android.os.Bundle) -> g
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> b
    void performActivityCreated(android.os.Bundle) -> h
    void performStart() -> A
    void performResume() -> B
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> C
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> b
    boolean performPrepareOptionsMenu(android.view.Menu) -> c
    boolean performOptionsItemSelected(android.view.MenuItem) -> c
    boolean performContextItemSelected(android.view.MenuItem) -> d
    void performOptionsMenuClosed(android.view.Menu) -> d
    void performSaveInstanceState(android.os.Bundle) -> i
    void performPause() -> D
    void performStop() -> E
    void performReallyStop() -> F
    void performDestroyView() -> G
    void performDestroy() -> H
android.support.v4.app.Fragment$1 -> android.support.v4.app.w:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
    boolean hasView() -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.x:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.y:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void supportFinishAfterTransition() -> a
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> b
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> a
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> c
    void supportInvalidateOptionsMenu() -> d
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onReallyStop() -> e
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.z:
    android.support.v4.app.FragmentActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.aa:
    android.support.v4.app.FragmentActivity this$0 -> a
    android.view.View findViewById(int) -> a
    boolean hasView() -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.ab:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    android.support.v4.util.SimpleArrayMap children -> c
    java.util.ArrayList fragments -> d
    android.support.v4.util.SimpleArrayMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.ac:
    android.view.View findViewById(int) -> a
    boolean hasView() -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.ad:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.ae:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.af:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> b
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> d
    void makeActive(android.support.v4.app.Fragment) -> c
    void makeInactive(android.support.v4.app.Fragment) -> d
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> u
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> e
    void reportBackStackChanged() -> f
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> g
    void saveFragmentViewState(android.support.v4.app.Fragment) -> e
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> f
    android.os.Parcelable saveAllState() -> h
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> i
    void dispatchCreate() -> j
    void dispatchActivityCreated() -> k
    void dispatchStart() -> l
    void dispatchResume() -> m
    void dispatchPause() -> n
    void dispatchStop() -> o
    void dispatchReallyStop() -> p
    void dispatchDestroyView() -> q
    void dispatchDestroy() -> r
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> s
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    android.view.LayoutInflater$Factory getLayoutInflaterFactory() -> t
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.ag:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.ah:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerImpl$FragmentTag -> android.support.v4.app.ai:
    int[] Fragment -> a
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.aj:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.ak:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.content.Context mContext -> b
    android.support.v4.app.FragmentManager mFragmentManager -> c
    int mContainerId -> d
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> e
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> f
    boolean mAttached -> g
    void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> a
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.al:
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.am:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.an:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.ao:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    int commit() -> a
android.support.v4.app.FragmentTransitionCompat21 -> android.support.v4.app.ap:
    java.lang.String getTransitionName(android.view.View) -> a
    java.lang.Object cloneTransition(java.lang.Object) -> a
    java.lang.Object captureExitingViews(java.lang.Object,android.view.View,java.util.ArrayList,java.util.Map) -> a
    void excludeTarget(java.lang.Object,android.view.View,boolean) -> a
    void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> a
    void setEpicenter(java.lang.Object,android.view.View) -> a
    void addTransitionTargets(java.lang.Object,java.lang.Object,android.view.View,android.support.v4.app.FragmentTransitionCompat21$ViewRetriever,android.view.View,android.support.v4.app.FragmentTransitionCompat21$EpicenterView,java.util.Map,java.util.ArrayList,java.util.Map,java.util.ArrayList) -> a
    java.lang.Object mergeTransitions(java.lang.Object,java.lang.Object,java.lang.Object,boolean) -> a
    void setSharedElementEpicenter(android.transition.Transition,android.support.v4.app.FragmentTransitionCompat21$EpicenterView) -> a
    android.graphics.Rect getBoundsOnScreen(android.view.View) -> c
    void captureTransitioningViews(java.util.ArrayList,android.view.View) -> b
    void findNamedViews(java.util.Map,android.view.View) -> a
    void cleanupTransitions(android.view.View,android.view.View,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.util.Map) -> a
    void removeTargets(java.lang.Object,java.util.ArrayList) -> a
    void addTargets(java.lang.Object,java.util.ArrayList) -> b
    void access$000(java.util.ArrayList,android.view.View) -> a
    android.graphics.Rect access$100(android.view.View) -> b
android.support.v4.app.FragmentTransitionCompat21$1 -> android.support.v4.app.aq:
    android.graphics.Rect val$epicenter -> a
    android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
android.support.v4.app.FragmentTransitionCompat21$2 -> android.support.v4.app.ar:
    android.view.View val$container -> a
    android.support.v4.app.FragmentTransitionCompat21$ViewRetriever val$inFragment -> b
    java.util.Map val$nameOverrides -> c
    java.util.Map val$renamedViews -> d
    android.transition.Transition val$enterTransition -> e
    java.util.ArrayList val$enteringViews -> f
    boolean onPreDraw() -> onPreDraw
android.support.v4.app.FragmentTransitionCompat21$3 -> android.support.v4.app.as:
    android.graphics.Rect mEpicenter -> b
    android.support.v4.app.FragmentTransitionCompat21$EpicenterView val$epicenterView -> a
    android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
android.support.v4.app.FragmentTransitionCompat21$4 -> android.support.v4.app.at:
    android.view.View val$sceneRoot -> a
    android.transition.Transition val$enterTransition -> b
    android.view.View val$nonExistentView -> c
    java.util.ArrayList val$enteringViews -> d
    android.transition.Transition val$exitTransition -> e
    java.util.ArrayList val$exitingViews -> f
    android.transition.Transition val$sharedElementTransition -> g
    java.util.ArrayList val$sharedElementTargets -> h
    java.util.Map val$renamedViews -> i
    java.util.ArrayList val$hiddenViews -> j
    android.transition.Transition val$overallTransition -> k
    boolean onPreDraw() -> onPreDraw
android.support.v4.app.FragmentTransitionCompat21$EpicenterView -> android.support.v4.app.au:
    android.view.View epicenter -> a
android.support.v4.app.FragmentTransitionCompat21$ViewRetriever -> android.support.v4.app.av:
    android.view.View getView() -> a
android.support.v4.app.LoaderManager -> android.support.v4.app.aw:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.ax:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.ay:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.az:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.ba:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationCompatSideChannelService -> android.support.v4.app.NotificationCompatSideChannelService:
android.support.v4.app.SharedElementCallback -> android.support.v4.app.bb:
    void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> a
    void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> b
    void onMapSharedElements(java.util.List,java.util.Map) -> a
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.bc:
android.support.v4.content.ContextCompat -> android.support.v4.content.a:
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> a
android.support.v4.content.ContextCompatApi21 -> android.support.v4.content.b:
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> a
android.support.v4.content.FileProvider -> android.support.v4.content.FileProvider:
    java.lang.String[] COLUMNS -> a
    java.io.File DEVICE_ROOT -> b
    java.util.HashMap sCache -> c
    android.support.v4.content.FileProvider$PathStrategy mStrategy -> d
    boolean onCreate() -> onCreate
    void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    android.support.v4.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String) -> a
    android.support.v4.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String) -> b
    int modeToMode(java.lang.String) -> a
    java.io.File buildPath(java.io.File,java.lang.String[]) -> a
    java.lang.String[] copyOf(java.lang.String[],int) -> a
    java.lang.Object[] copyOf(java.lang.Object[],int) -> a
android.support.v4.content.FileProvider$PathStrategy -> android.support.v4.content.c:
    java.io.File getFileForUri(android.net.Uri) -> a
android.support.v4.content.FileProvider$SimplePathStrategy -> android.support.v4.content.d:
    java.lang.String mAuthority -> a
    java.util.HashMap mRoots -> b
    void addRoot(java.lang.String,java.io.File) -> a
    java.io.File getFileForUri(android.net.Uri) -> a
android.support.v4.content.Loader -> android.support.v4.content.e:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    boolean mProcessingChange -> g
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void onStartLoading() -> b
    void stopLoading() -> c
    void onStopLoading() -> d
    void reset() -> e
    void onReset() -> f
    java.lang.String dataToString(java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.content.f:
android.support.v4.content.WakefulBroadcastReceiver -> android.support.v4.content.WakefulBroadcastReceiver:
    android.util.SparseArray mActiveWakeLocks -> a
    int mNextId -> b
android.support.v4.media.MediaMetadataCompat -> android.support.v4.media.MediaMetadataCompat:
    android.support.v4.util.ArrayMap METADATA_KEYS_TYPE -> a
    android.os.Bundle mBundle -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.MediaMetadataCompat$1 -> android.support.v4.media.a:
    android.support.v4.media.MediaMetadataCompat createFromParcel(android.os.Parcel) -> a
    android.support.v4.media.MediaMetadataCompat[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.RatingCompat -> android.support.v4.media.RatingCompat:
    int mRatingStyle -> a
    float mRatingValue -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.RatingCompat$1 -> android.support.v4.media.b:
    android.support.v4.media.RatingCompat createFromParcel(android.os.Parcel) -> a
    android.support.v4.media.RatingCompat[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.MediaSessionCompat -> android.support.v4.media.session.MediaSessionCompat:
android.support.v4.media.session.MediaSessionCompat$Token -> android.support.v4.media.session.MediaSessionCompat$Token:
    android.os.Parcelable mInner -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.MediaSessionCompat$Token$1 -> android.support.v4.media.session.a:
    android.support.v4.media.session.MediaSessionCompat$Token createFromParcel(android.os.Parcel) -> a
    android.support.v4.media.session.MediaSessionCompat$Token[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.PlaybackStateCompat -> android.support.v4.media.session.PlaybackStateCompat:
    int mState -> a
    long mPosition -> b
    long mBufferedPosition -> c
    float mSpeed -> d
    long mActions -> e
    java.lang.CharSequence mErrorMessage -> f
    long mUpdateTime -> g
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.PlaybackStateCompat$1 -> android.support.v4.media.session.b:
    android.support.v4.media.session.PlaybackStateCompat createFromParcel(android.os.Parcel) -> a
    android.support.v4.media.session.PlaybackStateCompat[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.os.ParcelableCompat -> android.support.v4.a.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.a.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.a.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.a.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.a.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.ArrayMap -> android.support.v4.b.a:
    android.support.v4.util.MapCollections mCollections -> a
    android.support.v4.util.MapCollections getCollection() -> b
    void putAll(java.util.Map) -> putAll
    boolean retainAll(java.util.Collection) -> a
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> android.support.v4.b.b:
    android.support.v4.util.ArrayMap this$0 -> a
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.ContainerHelpers -> android.support.v4.b.c:
    int[] EMPTY_INTS -> a
    long[] EMPTY_LONGS -> b
    java.lang.Object[] EMPTY_OBJECTS -> c
    int idealIntArraySize(int) -> a
    int idealByteArraySize(int) -> b
    boolean equal(java.lang.Object,java.lang.Object) -> a
    int binarySearch(int[],int,int) -> a
android.support.v4.util.DebugUtils -> android.support.v4.b.d:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.b.e:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.MapCollections -> android.support.v4.b.f:
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> b
    android.support.v4.util.MapCollections$KeySet mKeySet -> c
    android.support.v4.util.MapCollections$ValuesCollection mValues -> d
    boolean containsAllHelper(java.util.Map,java.util.Collection) -> a
    boolean removeAllHelper(java.util.Map,java.util.Collection) -> b
    boolean retainAllHelper(java.util.Map,java.util.Collection) -> c
    java.lang.Object[] toArrayHelper(int) -> b
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> a
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> a
    java.util.Set getEntrySet() -> d
    java.util.Set getKeySet() -> e
    java.util.Collection getValues() -> f
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.b.g:
    int mOffset -> a
    int mSize -> b
    int mIndex -> c
    boolean mCanRemove -> d
    android.support.v4.util.MapCollections this$0 -> e
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.b.h:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.util.Map$Entry) -> a
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean add(java.lang.Object) -> add
android.support.v4.util.MapCollections$KeySet -> android.support.v4.b.i:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.b.j:
    int mEnd -> a
    int mIndex -> b
    boolean mEntryValid -> c
    android.support.v4.util.MapCollections this$0 -> d
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> a
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object next() -> next
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.b.k:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.SimpleArrayMap -> android.support.v4.b.l:
    java.lang.Object[] mBaseCache -> b
    int mBaseCacheSize -> c
    java.lang.Object[] mTwiceBaseCache -> d
    int mTwiceBaseCacheSize -> e
    int[] mHashes -> f
    java.lang.Object[] mArray -> g
    int mSize -> h
    int indexOf(java.lang.Object,int) -> a
    int indexOfNull() -> a
    void allocArrays(int) -> e
    void freeArrays(int[],java.lang.Object[],int) -> a
    void clear() -> clear
    void ensureCapacity(int) -> a
    boolean containsKey(java.lang.Object) -> containsKey
    int indexOfKey(java.lang.Object) -> a
    int indexOfValue(java.lang.Object) -> b
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object keyAt(int) -> b
    java.lang.Object valueAt(int) -> c
    java.lang.Object setValueAt(int,java.lang.Object) -> a
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeAt(int) -> d
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.b.m:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    android.support.v4.util.SparseArrayCompat clone() -> a
    void gc() -> d
    int size() -> b
    int keyAt(int) -> a
    java.lang.Object valueAt(int) -> b
    void clear() -> c
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.a:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> b
    java.lang.Object DEFAULT_DELEGATE -> c
    java.lang.Object mBridge -> a
    java.lang.Object getBridge() -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.b:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.c:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.d:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.e:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.f:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.g:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.h:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> a
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.i:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.j:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.k:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> a
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.l:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.m:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.GravityCompat -> android.support.v4.view.n:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> a
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.o:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.p:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.q:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.r:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.s:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
    void startTracking(android.view.KeyEvent) -> b
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.t:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.u:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.v:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.w:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.x:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.y:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.MotionEventCompat -> android.support.v4.view.z:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionMasked(android.view.MotionEvent) -> a
    int getActionIndex(android.view.MotionEvent) -> b
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> c
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.aa:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.ab:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.ac:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.ad:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.PagerAdapter -> android.support.v4.view.ae:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> b
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    java.lang.CharSequence getPageTitle(int) -> a
    float getPageWidth(int) -> b
android.support.v4.view.PagerTabStrip -> android.support.v4.view.PagerTabStrip:
    int mIndicatorColor -> f
    int mIndicatorHeight -> g
    int mMinPaddingBottom -> h
    int mMinTextSpacing -> i
    int mMinStripHeight -> j
    int mTabPadding -> k
    android.graphics.Paint mTabPaint -> l
    android.graphics.Rect mTempRect -> m
    int mTabAlpha -> n
    boolean mDrawFullUnderline -> o
    boolean mDrawFullUnderlineSet -> p
    int mFullUnderlineHeight -> q
    boolean mIgnoreTap -> r
    float mInitialMotionX -> s
    float mInitialMotionY -> t
    int mTouchSlop -> u
    void setTabIndicatorColor(int) -> setTabIndicatorColor
    void setTabIndicatorColorResource(int) -> setTabIndicatorColorResource
    int getTabIndicatorColor() -> getTabIndicatorColor
    void setPadding(int,int,int,int) -> setPadding
    void setTextSpacing(int) -> setTextSpacing
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setBackgroundColor(int) -> setBackgroundColor
    void setBackgroundResource(int) -> setBackgroundResource
    void setDrawFullUnderline(boolean) -> setDrawFullUnderline
    boolean getDrawFullUnderline() -> getDrawFullUnderline
    int getMinHeight() -> getMinHeight
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onDraw(android.graphics.Canvas) -> onDraw
    void updateTextPositions(int,float,boolean) -> a
android.support.v4.view.PagerTabStrip$1 -> android.support.v4.view.af:
    android.support.v4.view.PagerTabStrip this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTabStrip$2 -> android.support.v4.view.ag:
    android.support.v4.view.PagerTabStrip this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    android.support.v4.view.ViewPager mPager -> a
    android.widget.TextView mPrevText -> b
    android.widget.TextView mCurrText -> c
    android.widget.TextView mNextText -> d
    int mLastKnownCurrentPage -> f
    float mLastKnownPositionOffset -> g
    int mScaledTextSpacing -> h
    int mGravity -> i
    boolean mUpdatingText -> j
    boolean mUpdatingPositions -> k
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> l
    java.lang.ref.WeakReference mWatchingAdapter -> m
    int[] ATTRS -> n
    int[] TEXT_ATTRS -> o
    int mNonPrimaryAlpha -> p
    int mTextColor -> e
    android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl IMPL -> q
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
    void setTextSpacing(int) -> setTextSpacing
    int getTextSpacing() -> getTextSpacing
    void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    void setTextColor(int) -> setTextColor
    void setTextSize(int,float) -> a
    void setGravity(int) -> setGravity
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateText(int,android.support.v4.view.PagerAdapter) -> a
    void requestLayout() -> requestLayout
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    void updateTextPositions(int,float,boolean) -> a
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getMinHeight() -> getMinHeight
    float access$100(android.support.v4.view.PagerTitleStrip) -> a
android.support.v4.view.PagerTitleStrip$1 -> android.support.v4.view.ah:
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.ai:
    int mScrollState -> b
    android.support.v4.view.PagerTitleStrip this$0 -> a
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    void onChanged() -> onChanged
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl -> android.support.v4.view.aj:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase -> android.support.v4.view.ak:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs -> android.support.v4.view.al:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStripIcs -> android.support.v4.view.am:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform -> android.support.v4.view.an:
    java.util.Locale mLocale -> a
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.ao:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.ap:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.aq:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.ar:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.as:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.ViewCompat -> android.support.v4.view.at:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> c
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
    boolean isOpaque(android.view.View) -> g
    void setScaleX(android.view.View,float) -> a
    void setScaleY(android.view.View,float) -> b
    float getScaleX(android.view.View) -> h
    void setElevation(android.view.View,float) -> c
    void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> a
    boolean getFitsSystemWindows(android.view.View) -> i
android.support.v4.view.ViewCompat$Api21ViewCompatImpl -> android.support.v4.view.au:
    void setElevation(android.view.View,float) -> a
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.av:
    java.util.WeakHashMap mViewPropertyAnimatorCompatMap -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> c
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
    boolean isOpaque(android.view.View) -> g
    float getScaleX(android.view.View) -> h
    void setScaleX(android.view.View,float) -> b
    void setScaleY(android.view.View,float) -> c
    void setElevation(android.view.View,float) -> a
    void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> a
    boolean getFitsSystemWindows(android.view.View) -> i
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.aw:
    boolean isOpaque(android.view.View) -> g
    void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.ax:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ay:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    void setScaleX(android.view.View,float) -> b
    void setScaleY(android.view.View,float) -> c
    float getScaleX(android.view.View) -> h
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.az:
    boolean accessibilityDelegateCheckFailed -> b
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.ba:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> c
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
    boolean getFitsSystemWindows(android.view.View) -> i
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.bb:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
android.support.v4.view.ViewCompat$KitKatViewCompatImpl -> android.support.v4.view.bc:
    void setImportantForAccessibility(android.view.View,int) -> c
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.bd:
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> c
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
    boolean isOpaque(android.view.View) -> g
    float getScaleX(android.view.View) -> h
    void setScaleX(android.view.View,float) -> b
    void setScaleY(android.view.View,float) -> c
    void setElevation(android.view.View,float) -> a
    void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> a
    boolean getFitsSystemWindows(android.view.View) -> i
android.support.v4.view.ViewCompatApi21 -> android.support.v4.view.be:
    void setElevation(android.view.View,float) -> a
android.support.v4.view.ViewCompatEclairMr1 -> android.support.v4.view.bf:
    java.lang.reflect.Method sChildrenDrawingOrderMethod -> a
    boolean isOpaque(android.view.View) -> a
    void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.bg:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.bh:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> a
    float getScaleX(android.view.View) -> b
    void setScaleX(android.view.View,float) -> a
    void setScaleY(android.view.View,float) -> b
android.support.v4.view.ViewCompatICS -> android.support.v4.view.bi:
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.bj:
    void postInvalidateOnAnimation(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> b
    void setImportantForAccessibility(android.view.View,int) -> a
    android.view.ViewParent getParentForAccessibility(android.view.View) -> c
    boolean getFitsSystemWindows(android.view.View) -> d
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.bk:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> a
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.bl:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> a
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.bm:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.bn:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$HoneycombViewConfigurationVersionImpl -> android.support.v4.view.bo:
android.support.v4.view.ViewConfigurationCompat$IcsViewConfigurationVersionImpl -> android.support.v4.view.bp:
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.bq:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.br:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewGroupCompat -> android.support.v4.view.bs:
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL -> a
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatApi21Impl -> android.support.v4.view.bt:
android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl -> android.support.v4.view.bu:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl -> android.support.v4.view.bv:
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl -> android.support.v4.view.bw:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl -> android.support.v4.view.bx:
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl -> android.support.v4.view.by:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompatHC -> android.support.v4.view.bz:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    int mExpectedAdapterCount -> b
    java.util.Comparator COMPARATOR -> c
    android.view.animation.Interpolator sInterpolator -> d
    java.util.ArrayList mItems -> e
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> f
    android.graphics.Rect mTempRect -> g
    android.support.v4.view.PagerAdapter mAdapter -> h
    int mCurItem -> i
    int mRestoredCurItem -> j
    android.os.Parcelable mRestoredAdapterState -> k
    java.lang.ClassLoader mRestoredClassLoader -> l
    android.widget.Scroller mScroller -> m
    android.support.v4.view.ViewPager$PagerObserver mObserver -> n
    int mPageMargin -> o
    android.graphics.drawable.Drawable mMarginDrawable -> p
    int mTopPageBounds -> q
    int mBottomPageBounds -> r
    float mFirstOffset -> s
    float mLastOffset -> t
    int mChildWidthMeasureSpec -> u
    int mChildHeightMeasureSpec -> v
    boolean mInLayout -> w
    boolean mScrollingCacheEnabled -> x
    boolean mPopulatePending -> y
    int mOffscreenPageLimit -> z
    boolean mIsBeingDragged -> A
    boolean mIsUnableToDrag -> B
    int mDefaultGutterSize -> C
    int mGutterSize -> D
    int mTouchSlop -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    float mInitialMotionX -> H
    float mInitialMotionY -> I
    int mActivePointerId -> J
    android.view.VelocityTracker mVelocityTracker -> K
    int mMinimumVelocity -> L
    int mMaximumVelocity -> M
    int mFlingDistance -> N
    int mCloseEnough -> O
    boolean mFakeDragging -> P
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> Q
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> R
    boolean mFirstLayout -> S
    boolean mNeedCalculatePageOffsets -> T
    boolean mCalledSuper -> U
    int mDecorChildCount -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> W
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> aa
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> ab
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> ac
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ad
    int mDrawingOrder -> ae
    java.util.ArrayList mDrawingOrderedChildren -> af
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> ag
    java.lang.Runnable mEndScrollRunnable -> ah
    int mScrollState -> ai
    void initViewPager() -> a
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> g
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> a
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> b
    void populate() -> c
    void populate(int) -> a
    void sortChildDrawingOrder() -> h
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestParentDisallowInterceptTouchEvent(boolean) -> c
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> i
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> j
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> d
    boolean pageRight() -> e
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(android.support.v4.view.ViewPager,int) -> a
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> a
    int access$300(android.support.v4.view.ViewPager) -> b
    int[] access$400() -> f
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ca:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.cb:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.cc:
    android.support.v4.view.ViewPager this$0 -> a
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.cd:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.ce:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.cf:
    android.support.v4.view.ViewPager this$0 -> b
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    boolean canScroll() -> b
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.cg:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ch:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.ci:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.cj:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.ck:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.cl:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.a.a:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> a
    java.lang.Object mInfo -> b
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> a
    java.lang.Object getInfo() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void setSource(android.view.View) -> a
    void addChild(android.view.View) -> b
    int getActions() -> b
    void addAction(int) -> a
    void setMovementGranularities(int) -> b
    int getMovementGranularities() -> c
    void setParent(android.view.View) -> c
    void getBoundsInParent(android.graphics.Rect) -> a
    void setBoundsInParent(android.graphics.Rect) -> b
    void getBoundsInScreen(android.graphics.Rect) -> c
    void setBoundsInScreen(android.graphics.Rect) -> d
    boolean isCheckable() -> d
    boolean isChecked() -> e
    boolean isFocusable() -> f
    void setFocusable(boolean) -> a
    boolean isFocused() -> g
    void setFocused(boolean) -> b
    boolean isVisibleToUser() -> h
    void setVisibleToUser(boolean) -> c
    boolean isAccessibilityFocused() -> i
    void setAccessibilityFocused(boolean) -> d
    boolean isSelected() -> j
    void setSelected(boolean) -> e
    boolean isClickable() -> k
    void setClickable(boolean) -> f
    boolean isLongClickable() -> l
    void setLongClickable(boolean) -> g
    boolean isEnabled() -> m
    void setEnabled(boolean) -> h
    boolean isPassword() -> n
    boolean isScrollable() -> o
    void setScrollable(boolean) -> i
    java.lang.CharSequence getPackageName() -> p
    void setPackageName(java.lang.CharSequence) -> a
    java.lang.CharSequence getClassName() -> q
    void setClassName(java.lang.CharSequence) -> b
    java.lang.CharSequence getText() -> r
    java.lang.CharSequence getContentDescription() -> s
    void setContentDescription(java.lang.CharSequence) -> c
    void recycle() -> t
    java.lang.String getViewIdResourceName() -> u
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String getActionSymbolicName(int) -> c
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi21Impl -> android.support.v4.view.a.b:
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.a.c:
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    java.lang.CharSequence getText(java.lang.Object) -> f
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isClickable(java.lang.Object) -> i
    boolean isEnabled(java.lang.Object) -> j
    boolean isFocusable(java.lang.Object) -> k
    boolean isFocused(java.lang.Object) -> l
    boolean isLongClickable(java.lang.Object) -> m
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    boolean isSelected(java.lang.Object) -> p
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> a
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFocusable(java.lang.Object,boolean) -> c
    void setFocused(java.lang.Object,boolean) -> d
    void setLongClickable(java.lang.Object,boolean) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setScrollable(java.lang.Object,boolean) -> f
    void setSelected(java.lang.Object,boolean) -> g
    void setSource(java.lang.Object,android.view.View) -> c
    void recycle(java.lang.Object) -> q
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.a.d:
    java.lang.Object obtain(java.lang.Object) -> a
    void setSource(java.lang.Object,android.view.View) -> c
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void addAction(java.lang.Object,int) -> a
    void setMovementGranularities(java.lang.Object,int) -> b
    int getMovementGranularities(java.lang.Object) -> r
    void setParent(java.lang.Object,android.view.View) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isFocusable(java.lang.Object) -> k
    void setFocusable(java.lang.Object,boolean) -> c
    boolean isFocused(java.lang.Object) -> l
    void setFocused(java.lang.Object,boolean) -> d
    boolean isVisibleToUser(java.lang.Object) -> s
    void setVisibleToUser(java.lang.Object,boolean) -> h
    boolean isAccessibilityFocused(java.lang.Object) -> t
    void setAccessibilityFocused(java.lang.Object,boolean) -> i
    boolean isSelected(java.lang.Object) -> p
    void setSelected(java.lang.Object,boolean) -> g
    boolean isClickable(java.lang.Object) -> i
    void setClickable(java.lang.Object,boolean) -> a
    boolean isLongClickable(java.lang.Object) -> m
    void setLongClickable(java.lang.Object,boolean) -> e
    boolean isEnabled(java.lang.Object) -> j
    void setEnabled(java.lang.Object,boolean) -> b
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    void setScrollable(java.lang.Object,boolean) -> f
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    java.lang.CharSequence getText(java.lang.Object) -> f
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void recycle(java.lang.Object) -> q
    java.lang.String getViewIdResourceName(java.lang.Object) -> u
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.a.e:
    boolean isVisibleToUser(java.lang.Object) -> s
    void setVisibleToUser(java.lang.Object,boolean) -> h
    boolean isAccessibilityFocused(java.lang.Object) -> t
    void setAccessibilityFocused(java.lang.Object,boolean) -> i
    void setMovementGranularities(java.lang.Object,int) -> b
    int getMovementGranularities(java.lang.Object) -> r
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl -> android.support.v4.view.a.f:
    java.lang.String getViewIdResourceName(java.lang.Object) -> u
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl -> android.support.v4.view.a.g:
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.a.h:
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    java.lang.CharSequence getText(java.lang.Object) -> f
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isClickable(java.lang.Object) -> i
    boolean isEnabled(java.lang.Object) -> j
    boolean isFocusable(java.lang.Object) -> k
    boolean isFocused(java.lang.Object) -> l
    boolean isVisibleToUser(java.lang.Object) -> s
    boolean isAccessibilityFocused(java.lang.Object) -> t
    boolean isLongClickable(java.lang.Object) -> m
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    boolean isSelected(java.lang.Object) -> p
    void setMovementGranularities(java.lang.Object,int) -> b
    int getMovementGranularities(java.lang.Object) -> r
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> a
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFocusable(java.lang.Object,boolean) -> c
    void setFocused(java.lang.Object,boolean) -> d
    void setVisibleToUser(java.lang.Object,boolean) -> h
    void setAccessibilityFocused(java.lang.Object,boolean) -> i
    void setLongClickable(java.lang.Object,boolean) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setScrollable(java.lang.Object,boolean) -> f
    void setSelected(java.lang.Object,boolean) -> g
    void setSource(java.lang.Object,android.view.View) -> c
    void recycle(java.lang.Object) -> q
    java.lang.String getViewIdResourceName(java.lang.Object) -> u
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.a.i:
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    java.lang.CharSequence getText(java.lang.Object) -> f
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isClickable(java.lang.Object) -> i
    boolean isEnabled(java.lang.Object) -> j
    boolean isFocusable(java.lang.Object) -> k
    boolean isFocused(java.lang.Object) -> l
    boolean isLongClickable(java.lang.Object) -> m
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    boolean isSelected(java.lang.Object) -> p
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> a
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFocusable(java.lang.Object,boolean) -> c
    void setFocused(java.lang.Object,boolean) -> d
    void setLongClickable(java.lang.Object,boolean) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setScrollable(java.lang.Object,boolean) -> f
    void setSelected(java.lang.Object,boolean) -> g
    void setSource(java.lang.Object,android.view.View) -> c
    void recycle(java.lang.Object) -> q
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean -> android.support.v4.view.a.j:
    boolean isVisibleToUser(java.lang.Object) -> a
    void setVisibleToUser(java.lang.Object,boolean) -> a
    void setMovementGranularities(java.lang.Object,int) -> a
    int getMovementGranularities(java.lang.Object) -> b
    boolean isAccessibilityFocused(java.lang.Object) -> c
    void setAccesibilityFocused(java.lang.Object,boolean) -> b
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2 -> android.support.v4.view.a.k:
    java.lang.String getViewIdResourceName(java.lang.Object) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.a.l:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> a
    java.lang.Object mProvider -> b
    java.lang.Object getProvider() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> b
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.a.m:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.a.n:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.a.o:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> b
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    java.lang.Object createAccessibilityNodeInfo(int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl -> android.support.v4.view.a.p:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1 -> android.support.v4.view.a.q:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl this$0 -> b
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    java.lang.Object findFocus(int) -> b
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.a.r:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.a.s:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.a.t:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.a.u:
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat -> android.support.v4.view.a.v:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1 -> android.support.v4.view.a.w:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
    android.view.accessibility.AccessibilityNodeInfo findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge -> android.support.v4.view.a.x:
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    java.lang.Object findFocus(int) -> b
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.a.y:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> a
    java.lang.Object mRecord -> b
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> a
    void setScrollable(boolean) -> a
    void setItemCount(int) -> a
    void setFromIndex(int) -> b
    void setToIndex(int) -> c
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> android.support.v4.view.a.z:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> android.support.v4.view.a.aa:
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> android.support.v4.view.a.ab:
    java.lang.Object obtain() -> a
    void setScrollable(java.lang.Object,boolean) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setFromIndex(java.lang.Object,int) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> android.support.v4.view.a.ac:
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> android.support.v4.view.a.ad:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs -> android.support.v4.view.a.ae:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.widget.CircleImageView -> android.support.v4.widget.a:
    android.view.animation.Animation$AnimationListener mListener -> a
    int mShadowRadius -> b
    boolean elevationSupported() -> a
    void onMeasure(int,int) -> onMeasure
    void setAnimationListener(android.view.animation.Animation$AnimationListener) -> a
    void onAnimationStart() -> onAnimationStart
    void onAnimationEnd() -> onAnimationEnd
    void setBackgroundColor(int) -> setBackgroundColor
android.support.v4.widget.CircleImageView$OvalShadow -> android.support.v4.widget.b:
    android.graphics.RadialGradient mRadialGradient -> b
    int mShadowRadius -> c
    android.graphics.Paint mShadowPaint -> d
    int mCircleDiameter -> e
    android.support.v4.widget.CircleImageView this$0 -> a
    void draw(android.graphics.Canvas,android.graphics.Paint) -> draw
android.support.v4.widget.ContentLoadingProgressBar -> android.support.v4.widget.ContentLoadingProgressBar:
    long mStartTime -> a
    boolean mPostedHide -> b
    boolean mPostedShow -> c
    boolean mDismissed -> d
    java.lang.Runnable mDelayedHide -> e
    java.lang.Runnable mDelayedShow -> f
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void removeCallbacks() -> a
    boolean access$002(android.support.v4.widget.ContentLoadingProgressBar,boolean) -> a
    long access$102(android.support.v4.widget.ContentLoadingProgressBar,long) -> a
    boolean access$202(android.support.v4.widget.ContentLoadingProgressBar,boolean) -> b
    boolean access$300(android.support.v4.widget.ContentLoadingProgressBar) -> a
android.support.v4.widget.ContentLoadingProgressBar$1 -> android.support.v4.widget.c:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> a
    void run() -> run
android.support.v4.widget.ContentLoadingProgressBar$2 -> android.support.v4.widget.d:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> a
    void run() -> run
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    int[] LAYOUT_ATTRS -> b
    android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate mChildAccessibilityDelegate -> c
    int mMinDrawerMargin -> d
    int mScrimColor -> e
    float mScrimOpacity -> f
    android.graphics.Paint mScrimPaint -> g
    android.support.v4.widget.ViewDragHelper mLeftDragger -> h
    android.support.v4.widget.ViewDragHelper mRightDragger -> i
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> j
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> k
    int mDrawerState -> l
    boolean mInLayout -> m
    boolean mFirstLayout -> n
    int mLockModeLeft -> o
    int mLockModeRight -> p
    boolean mDisallowInterceptRequested -> q
    boolean mChildrenCanceledTouch -> r
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> s
    float mInitialMotionX -> t
    float mInitialMotionY -> u
    android.graphics.drawable.Drawable mShadowLeft -> v
    android.graphics.drawable.Drawable mShadowRight -> w
    android.graphics.drawable.Drawable mStatusBarBackground -> x
    java.lang.CharSequence mTitleLeft -> y
    java.lang.CharSequence mTitleRight -> z
    java.lang.Object mLastInsets -> A
    boolean mDrawStatusBarBackground -> B
    android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImpl IMPL -> a
    void setChildInsets(java.lang.Object,boolean) -> a
    void setDrawerShadow(android.graphics.drawable.Drawable,int) -> a
    void setDrawerShadow(int,int) -> a
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> b
    void setDrawerLockMode(int,android.view.View) -> a
    int getDrawerLockMode(android.view.View) -> a
    java.lang.CharSequence getDrawerTitle(int) -> a
    void updateDrawerState(int,int,android.view.View) -> a
    void dispatchOnDrawerClosed(android.view.View) -> b
    void dispatchOnDrawerOpened(android.view.View) -> c
    void dispatchOnDrawerSlide(android.view.View,float) -> a
    void setDrawerViewOffset(android.view.View,float) -> b
    float getDrawerViewOffset(android.view.View) -> d
    int getDrawerViewAbsoluteGravity(android.view.View) -> e
    boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> a
    android.view.View findOpenDrawer() -> a
    android.view.View findDrawerWithGravity(int) -> b
    java.lang.String gravityToString(int) -> c
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> m
    void setStatusBarBackground(android.graphics.drawable.Drawable) -> setStatusBarBackground
    void setStatusBarBackground(int) -> setStatusBarBackground
    void setStatusBarBackgroundColor(int) -> setStatusBarBackgroundColor
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> f
    boolean isDrawerView(android.view.View) -> g
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> b
    void closeDrawers(boolean) -> a
    void openDrawer(android.view.View) -> h
    void openDrawer(int) -> d
    void closeDrawer(android.view.View) -> i
    void closeDrawer(int) -> e
    boolean isDrawerOpen(android.view.View) -> j
    boolean isDrawerOpen(int) -> f
    boolean isDrawerVisible(android.view.View) -> k
    boolean isDrawerVisible(int) -> g
    boolean hasPeekingDrawer() -> e
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> f
    android.view.View findVisibleDrawer() -> g
    void cancelChildViewTouch() -> c
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    boolean includeChildForAccessibility(android.view.View) -> n
    int[] access$100() -> d
    android.view.View access$200(android.support.v4.widget.DrawerLayout) -> a
    boolean access$300(android.view.View) -> l
android.support.v4.widget.DrawerLayout$AccessibilityDelegate -> android.support.v4.widget.e:
    android.graphics.Rect mTmpRect -> c
    android.support.v4.widget.DrawerLayout this$0 -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void addChildrenForAccessibility(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.view.ViewGroup) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate -> android.support.v4.widget.f:
    android.support.v4.widget.DrawerLayout this$0 -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImpl -> android.support.v4.widget.g:
    void configureApplyInsets(android.view.View) -> a
    void dispatchChildInsets(android.view.View,java.lang.Object,int) -> a
    void applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int) -> a
    int getTopInset(java.lang.Object) -> a
android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplApi21 -> android.support.v4.widget.h:
    void configureApplyInsets(android.view.View) -> a
    void dispatchChildInsets(android.view.View,java.lang.Object,int) -> a
    void applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int) -> a
    int getTopInset(java.lang.Object) -> a
android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplBase -> android.support.v4.widget.i:
    void configureApplyInsets(android.view.View) -> a
    void dispatchChildInsets(android.view.View,java.lang.Object,int) -> a
    void applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int) -> a
    int getTopInset(java.lang.Object) -> a
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.j:
    void onDrawerSlide(android.view.View,float) -> a
    void onDrawerOpened(android.view.View) -> b
    void onDrawerClosed(android.view.View) -> a
    void onDrawerStateChanged(int) -> a
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.DrawerLayout$LayoutParams:
    int gravity -> a
    float onScreen -> b
    boolean isPeeking -> c
    boolean knownOpen -> d
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> a
    int lockModeLeft -> b
    int lockModeRight -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.k:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.l:
    int mAbsGravity -> b
    android.support.v4.widget.ViewDragHelper mDragger -> c
    java.lang.Runnable mPeekRunnable -> d
    android.support.v4.widget.DrawerLayout this$0 -> a
    void setDragger(android.support.v4.widget.ViewDragHelper) -> a
    void removeCallbacks() -> a
    boolean tryCaptureView(android.view.View,int) -> a
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void closeOtherDrawer() -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    void peekDrawer() -> c
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getViewHorizontalDragRange(android.view.View) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
    void access$000(android.support.v4.widget.DrawerLayout$ViewDragCallback) -> a
android.support.v4.widget.DrawerLayout$ViewDragCallback$1 -> android.support.v4.widget.m:
    android.support.v4.widget.DrawerLayout$ViewDragCallback this$1 -> a
    void run() -> run
android.support.v4.widget.DrawerLayoutCompatApi21 -> android.support.v4.widget.n:
    void configureApplyInsets(android.view.View) -> a
    void dispatchChildInsets(android.view.View,java.lang.Object,int) -> a
    void applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int) -> a
    int getTopInset(java.lang.Object) -> a
android.support.v4.widget.DrawerLayoutCompatApi21$InsetsListener -> android.support.v4.widget.o:
    android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
android.support.v4.widget.DrawerLayoutImpl -> android.support.v4.widget.p:
    void setChildInsets(java.lang.Object,boolean) -> a
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.q:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.r:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.s:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.t:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.u:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.MaterialProgressDrawable -> android.support.v4.widget.v:
    android.view.animation.Interpolator LINEAR_INTERPOLATOR -> a
    android.view.animation.Interpolator END_CURVE_INTERPOLATOR -> b
    android.view.animation.Interpolator START_CURVE_INTERPOLATOR -> c
    android.view.animation.Interpolator EASE_INTERPOLATOR -> d
    int[] COLORS -> e
    java.util.ArrayList mAnimators -> f
    android.support.v4.widget.MaterialProgressDrawable$Ring mRing -> g
    float mRotation -> h
    android.content.res.Resources mResources -> i
    android.view.View mParent -> j
    android.view.animation.Animation mAnimation -> k
    float mRotationCount -> l
    double mWidth -> m
    double mHeight -> n
    android.view.animation.Animation mFinishAnimation -> o
    android.graphics.drawable.Drawable$Callback mCallback -> p
    void setSizeParameters(double,double,double,double,float,float) -> a
    void updateSizes(int) -> a
    void showArrow(boolean) -> a
    void setArrowScale(float) -> a
    void setStartEndTrim(float,float) -> a
    void setProgressRotation(float) -> b
    void setBackgroundColor(int) -> b
    void setColorSchemeColors(int[]) -> a
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getIntrinsicWidth() -> getIntrinsicWidth
    void draw(android.graphics.Canvas) -> draw
    void setAlpha(int) -> setAlpha
    int getAlpha() -> getAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setRotation(float) -> c
    int getOpacity() -> getOpacity
    boolean isRunning() -> isRunning
    void start() -> start
    void stop() -> stop
    void setupAnimators() -> c
    android.view.animation.Animation access$200(android.support.v4.widget.MaterialProgressDrawable) -> a
    android.view.View access$300(android.support.v4.widget.MaterialProgressDrawable) -> b
    android.view.animation.Interpolator access$400() -> a
    android.view.animation.Interpolator access$500() -> b
    float access$600(android.support.v4.widget.MaterialProgressDrawable) -> c
    float access$602(android.support.v4.widget.MaterialProgressDrawable,float) -> a
android.support.v4.widget.MaterialProgressDrawable$1 -> android.support.v4.widget.w:
    android.support.v4.widget.MaterialProgressDrawable$Ring val$ring -> a
    android.support.v4.widget.MaterialProgressDrawable this$0 -> b
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.MaterialProgressDrawable$2 -> android.support.v4.widget.x:
    android.support.v4.widget.MaterialProgressDrawable$Ring val$ring -> a
    android.support.v4.widget.MaterialProgressDrawable this$0 -> b
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
android.support.v4.widget.MaterialProgressDrawable$3 -> android.support.v4.widget.y:
    android.support.v4.widget.MaterialProgressDrawable$Ring val$ring -> a
    android.support.v4.widget.MaterialProgressDrawable this$0 -> b
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.MaterialProgressDrawable$4 -> android.support.v4.widget.z:
    android.support.v4.widget.MaterialProgressDrawable$Ring val$ring -> a
    android.support.v4.widget.MaterialProgressDrawable this$0 -> b
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
android.support.v4.widget.MaterialProgressDrawable$5 -> android.support.v4.widget.aa:
    android.support.v4.widget.MaterialProgressDrawable this$0 -> a
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
android.support.v4.widget.MaterialProgressDrawable$EndCurveInterpolator -> android.support.v4.widget.ab:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.MaterialProgressDrawable$Ring -> android.support.v4.widget.ac:
    android.graphics.RectF mTempBounds -> a
    android.graphics.Paint mPaint -> b
    android.graphics.Paint mArrowPaint -> c
    android.graphics.drawable.Drawable$Callback mCallback -> d
    float mStartTrim -> e
    float mEndTrim -> f
    float mRotation -> g
    float mStrokeWidth -> h
    float mStrokeInset -> i
    int[] mColors -> j
    int mColorIndex -> k
    float mStartingStartTrim -> l
    float mStartingEndTrim -> m
    float mStartingRotation -> n
    boolean mShowArrow -> o
    android.graphics.Path mArrow -> p
    float mArrowScale -> q
    double mRingCenterRadius -> r
    int mArrowWidth -> s
    int mArrowHeight -> t
    int mAlpha -> u
    android.graphics.Paint mCirclePaint -> v
    int mBackgroundColor -> w
    void setBackgroundColor(int) -> a
    void setArrowDimensions(float,float) -> a
    void draw(android.graphics.Canvas,android.graphics.Rect) -> a
    void drawTriangle(android.graphics.Canvas,float,float,android.graphics.Rect) -> a
    void setColors(int[]) -> a
    void setColorIndex(int) -> b
    void goToNextColor() -> a
    void setColorFilter(android.graphics.ColorFilter) -> a
    void setAlpha(int) -> c
    int getAlpha() -> b
    void setStrokeWidth(float) -> a
    float getStrokeWidth() -> c
    void setStartTrim(float) -> b
    float getStartTrim() -> d
    float getStartingStartTrim() -> e
    float getStartingEndTrim() -> f
    void setEndTrim(float) -> c
    float getEndTrim() -> g
    void setRotation(float) -> d
    void setInsets(int,int) -> a
    void setCenterRadius(double) -> a
    double getCenterRadius() -> h
    void setShowArrow(boolean) -> a
    void setArrowScale(float) -> e
    float getStartingRotation() -> i
    void storeOriginals() -> j
    void resetOriginals() -> k
    void invalidateSelf() -> l
android.support.v4.widget.MaterialProgressDrawable$StartCurveInterpolator -> android.support.v4.widget.ad:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.ae:
    java.lang.Object mScroller -> a
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl mImpl -> b
    android.support.v4.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator) -> a
    int getCurrX() -> a
    int getCurrY() -> b
    int getFinalX() -> c
    int getFinalY() -> d
    boolean computeScrollOffset() -> e
    void startScroll(int,int,int,int,int) -> a
    void abortAnimation() -> f
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.af:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    int getCurrX(java.lang.Object) -> a
    int getCurrY(java.lang.Object) -> b
    boolean computeScrollOffset(java.lang.Object) -> c
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> d
    int getFinalX(java.lang.Object) -> e
    int getFinalY(java.lang.Object) -> f
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.ag:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    int getCurrX(java.lang.Object) -> a
    int getCurrY(java.lang.Object) -> b
    boolean computeScrollOffset(java.lang.Object) -> c
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> d
    int getFinalX(java.lang.Object) -> e
    int getFinalY(java.lang.Object) -> f
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.ah:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    int getCurrX(java.lang.Object) -> a
    int getCurrY(java.lang.Object) -> b
    boolean computeScrollOffset(java.lang.Object) -> c
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> d
    int getFinalX(java.lang.Object) -> e
    int getFinalY(java.lang.Object) -> f
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.ai:
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.aj:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    int getCurrX(java.lang.Object) -> a
    int getCurrY(java.lang.Object) -> b
    boolean computeScrollOffset(java.lang.Object) -> c
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> d
    int getFinalX(java.lang.Object) -> e
    int getFinalY(java.lang.Object) -> f
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    int mSliderFadeColor -> b
    int mCoveredFadeColor -> c
    android.graphics.drawable.Drawable mShadowDrawableLeft -> d
    android.graphics.drawable.Drawable mShadowDrawableRight -> e
    int mOverhangSize -> f
    boolean mCanSlide -> g
    android.view.View mSlideableView -> h
    float mSlideOffset -> i
    float mParallaxOffset -> j
    int mSlideRange -> k
    boolean mIsUnableToDrag -> l
    int mParallaxBy -> m
    float mInitialMotionX -> n
    float mInitialMotionY -> o
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> p
    android.support.v4.widget.ViewDragHelper mDragHelper -> q
    boolean mPreservedOpenState -> r
    boolean mFirstLayout -> s
    android.graphics.Rect mTmpRect -> t
    java.util.ArrayList mPostedRunnables -> u
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> a
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void dispatchOnPanelSlide(android.view.View) -> a
    void dispatchOnPanelOpened(android.view.View) -> b
    void dispatchOnPanelClosed(android.view.View) -> c
    void updateObscuredViewsVisibility(android.view.View) -> d
    void setAllChildrenVisible() -> a
    boolean viewIsOpaque(android.view.View) -> f
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> a
    boolean openPane(android.view.View,int) -> b
    boolean openPane() -> b
    boolean closePane() -> c
    boolean isOpen() -> d
    boolean isSlideable() -> e
    void onPanelDragged(int) -> a
    void dimChildView(android.view.View,float,int) -> a
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> g
    boolean smoothSlideTo(float,int) -> a
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowDrawableLeft(android.graphics.drawable.Drawable) -> setShadowDrawableLeft
    void setShadowDrawableRight(android.graphics.drawable.Drawable) -> setShadowDrawableRight
    void setShadowResource(int) -> setShadowResource
    void setShadowResourceLeft(int) -> setShadowResourceLeft
    void setShadowResourceRight(int) -> setShadowResourceRight
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> a
    boolean isDimmed(android.view.View) -> e
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean isLayoutRtlSupport() -> f
    boolean access$100(android.support.v4.widget.SlidingPaneLayout) -> a
    android.support.v4.widget.ViewDragHelper access$200(android.support.v4.widget.SlidingPaneLayout) -> b
    float access$300(android.support.v4.widget.SlidingPaneLayout) -> c
    android.view.View access$400(android.support.v4.widget.SlidingPaneLayout) -> d
    boolean access$502(android.support.v4.widget.SlidingPaneLayout,boolean) -> a
    void access$600(android.support.v4.widget.SlidingPaneLayout,int) -> a
    boolean access$700(android.support.v4.widget.SlidingPaneLayout) -> e
    int access$800(android.support.v4.widget.SlidingPaneLayout) -> f
    void access$1000(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
    java.util.ArrayList access$1100(android.support.v4.widget.SlidingPaneLayout) -> g
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.ak:
android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate -> android.support.v4.widget.al:
    android.graphics.Rect mTmpRect -> c
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean filter(android.view.View) -> b
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.am:
    android.view.View mChildView -> a
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$DragHelperCallback -> android.support.v4.widget.an:
    android.support.v4.widget.SlidingPaneLayout this$0 -> a
    boolean tryCaptureView(android.view.View,int) -> a
    void onViewDragStateChanged(int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewReleased(android.view.View,float,float) -> a
    int getViewHorizontalDragRange(android.view.View) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
    void onEdgeDragStarted(int,int) -> b
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.SlidingPaneLayout$LayoutParams:
    int[] ATTRS -> e
    float weight -> a
    boolean slideable -> b
    boolean dimWhenOffset -> c
    android.graphics.Paint dimPaint -> d
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.ao:
    void onPanelSlide(android.view.View,float) -> a
    void onPanelOpened(android.view.View) -> a
    void onPanelClosed(android.view.View) -> b
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.ap:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.aq:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.ar:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.as:
    java.lang.reflect.Method mGetDisplayList -> a
    java.lang.reflect.Field mRecreateDisplayList -> b
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.at:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SwipeRefreshLayout -> android.support.v4.widget.SwipeRefreshLayout:
    java.lang.String LOG_TAG -> c
    android.view.View mTarget -> d
    android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener mListener -> e
    boolean mRefreshing -> f
    int mTouchSlop -> g
    float mTotalDragDistance -> h
    int mMediumAnimationDuration -> i
    int mCurrentTargetOffsetTop -> j
    boolean mOriginalOffsetCalculated -> k
    float mInitialMotionY -> l
    boolean mIsBeingDragged -> m
    int mActivePointerId -> n
    boolean mScale -> o
    boolean mReturningToStart -> p
    android.view.animation.DecelerateInterpolator mDecelerateInterpolator -> q
    int[] LAYOUT_ATTRS -> r
    android.support.v4.widget.CircleImageView mCircleView -> s
    int mCircleViewIndex -> t
    int mFrom -> a
    float mStartingScale -> u
    int mOriginalOffsetTop -> b
    android.support.v4.widget.MaterialProgressDrawable mProgress -> v
    android.view.animation.Animation mScaleAnimation -> w
    android.view.animation.Animation mScaleDownAnimation -> x
    android.view.animation.Animation mAlphaStartAnimation -> y
    android.view.animation.Animation mAlphaMaxAnimation -> z
    android.view.animation.Animation mScaleDownToStartAnimation -> A
    float mSpinnerFinalOffset -> B
    boolean mNotify -> C
    int mCircleWidth -> D
    int mCircleHeight -> E
    boolean mUsingCustomStart -> F
    android.view.animation.Animation$AnimationListener mRefreshListener -> G
    android.view.animation.Animation mAnimateToCorrectPosition -> H
    android.view.animation.Animation mAnimateToStartPosition -> I
    void setColorViewAlpha(int) -> setColorViewAlpha
    void setSize(int) -> setSize
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    void createProgressView() -> b
    void setOnRefreshListener(android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener) -> setOnRefreshListener
    boolean isAlphaUsedForScale() -> c
    void setRefreshing(boolean) -> setRefreshing
    void startScaleUpAnimation(android.view.animation.Animation$AnimationListener) -> a
    void setAnimationProgress(float) -> setAnimationProgress
    void setRefreshing(boolean,boolean) -> a
    void startScaleDownAnimation(android.view.animation.Animation$AnimationListener) -> b
    void startProgressAlphaStartAnimation() -> d
    void startProgressAlphaMaxAnimation() -> e
    android.view.animation.Animation startAlphaAnimation(int,int) -> a
    void setProgressBackgroundColor(int) -> setProgressBackgroundColor
    void setColorScheme(int[]) -> setColorScheme
    void setColorSchemeResources(int[]) -> setColorSchemeResources
    void setColorSchemeColors(int[]) -> setColorSchemeColors
    void ensureTarget() -> f
    void setDistanceToTriggerSync(int) -> setDistanceToTriggerSync
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    boolean canChildScrollUp() -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    float getMotionEventY(android.view.MotionEvent,int) -> a
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    boolean isAnimationRunning(android.view.animation.Animation) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void animateOffsetToCorrectPosition(int,android.view.animation.Animation$AnimationListener) -> a
    void animateOffsetToStartPosition(int,android.view.animation.Animation$AnimationListener) -> b
    void moveToStart(float) -> a
    void startScaleDownReturnToStartAnimation(int,android.view.animation.Animation$AnimationListener) -> c
    void setTargetOffsetTopAndBottom(int,boolean) -> a
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    boolean access$000(android.support.v4.widget.SwipeRefreshLayout) -> a
    android.support.v4.widget.MaterialProgressDrawable access$100(android.support.v4.widget.SwipeRefreshLayout) -> b
    boolean access$200(android.support.v4.widget.SwipeRefreshLayout) -> c
    android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener access$300(android.support.v4.widget.SwipeRefreshLayout) -> d
    android.support.v4.widget.CircleImageView access$400(android.support.v4.widget.SwipeRefreshLayout) -> e
    void access$500(android.support.v4.widget.SwipeRefreshLayout,int) -> a
    boolean access$600(android.support.v4.widget.SwipeRefreshLayout) -> f
    void access$700(android.support.v4.widget.SwipeRefreshLayout,float) -> a
    int access$800(android.support.v4.widget.SwipeRefreshLayout) -> g
    void access$900(android.support.v4.widget.SwipeRefreshLayout,int,boolean) -> a
    int access$802(android.support.v4.widget.SwipeRefreshLayout,int) -> b
    void access$1000(android.support.v4.widget.SwipeRefreshLayout,android.view.animation.Animation$AnimationListener) -> a
    boolean access$1100(android.support.v4.widget.SwipeRefreshLayout) -> h
    float access$1200(android.support.v4.widget.SwipeRefreshLayout) -> i
    void access$1300(android.support.v4.widget.SwipeRefreshLayout,float) -> b
    float access$1400(android.support.v4.widget.SwipeRefreshLayout) -> j
android.support.v4.widget.SwipeRefreshLayout$1 -> android.support.v4.widget.au:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
android.support.v4.widget.SwipeRefreshLayout$2 -> android.support.v4.widget.av:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$3 -> android.support.v4.widget.aw:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$4 -> android.support.v4.widget.ax:
    int val$startingAlpha -> a
    int val$endingAlpha -> b
    android.support.v4.widget.SwipeRefreshLayout this$0 -> c
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$5 -> android.support.v4.widget.ay:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
android.support.v4.widget.SwipeRefreshLayout$6 -> android.support.v4.widget.az:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$7 -> android.support.v4.widget.ba:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$8 -> android.support.v4.widget.bb:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener -> android.support.v4.widget.bc:
    void onRefresh() -> a
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.bd:
    int mDragState -> a
    int mTouchSlop -> b
    int mActivePointerId -> c
    float[] mInitialMotionX -> d
    float[] mInitialMotionY -> e
    float[] mLastMotionX -> f
    float[] mLastMotionY -> g
    int[] mInitialEdgesTouched -> h
    int[] mEdgeDragsInProgress -> i
    int[] mEdgeDragsLocked -> j
    int mPointersDown -> k
    android.view.VelocityTracker mVelocityTracker -> l
    float mMaxVelocity -> m
    float mMinVelocity -> n
    int mEdgeSize -> o
    int mTrackingEdges -> p
    android.support.v4.widget.ScrollerCompat mScroller -> q
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> r
    android.view.View mCapturedView -> s
    boolean mReleaseInProgress -> t
    android.view.ViewGroup mParentView -> u
    android.view.animation.Interpolator sInterpolator -> v
    java.lang.Runnable mSetIdleRunnable -> w
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback) -> a
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback) -> a
    void setMinVelocity(float) -> a
    int getViewDragState() -> a
    void setEdgeTrackingEnabled(int) -> a
    int getEdgeSize() -> b
    void captureChildView(android.view.View,int) -> a
    android.view.View getCapturedView() -> c
    int getTouchSlop() -> d
    void cancel() -> e
    void abort() -> f
    boolean smoothSlideViewTo(android.view.View,int,int) -> a
    boolean settleCapturedViewAt(int,int) -> a
    boolean forceSettleCapturedViewAt(int,int,int,int) -> a
    int computeSettleDuration(android.view.View,int,int,int,int) -> a
    int computeAxisDuration(int,int,int) -> a
    int clampMag(int,int,int) -> b
    float clampMag(float,float,float) -> a
    float distanceInfluenceForSnapDuration(float) -> b
    boolean continueSettling(boolean) -> a
    void dispatchViewReleased(float,float) -> a
    void clearMotionHistory() -> g
    void clearMotionHistory(int) -> e
    void ensureMotionHistorySizeForId(int) -> f
    void saveInitialMotion(float,float,int) -> a
    void saveLastMotion(android.view.MotionEvent) -> c
    boolean isPointerDown(int) -> b
    void setDragState(int) -> c
    boolean tryCaptureViewForDrag(android.view.View,int) -> b
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> a
    void processTouchEvent(android.view.MotionEvent) -> b
    void reportNewEdgeDrags(float,float,int) -> b
    boolean checkNewEdgeDrag(float,float,int,int) -> a
    boolean checkTouchSlop(android.view.View,float,float) -> a
    boolean checkTouchSlop(int) -> d
    boolean checkTouchSlop(int,int) -> b
    void releaseViewForPointerUp() -> h
    void dragTo(int,int,int,int) -> b
    boolean isCapturedViewUnder(int,int) -> c
    boolean isViewUnder(android.view.View,int,int) -> b
    android.view.View findTopChildUnder(int,int) -> d
    int getEdgesTouched(int,int) -> e
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.be:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$2 -> android.support.v4.widget.bf:
    android.support.v4.widget.ViewDragHelper this$0 -> a
    void run() -> run
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.bg:
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getOrderedChildIndex(int) -> c
    int getViewHorizontalDragRange(android.view.View) -> a
    int getViewVerticalDragRange(android.view.View) -> b
    boolean tryCaptureView(android.view.View,int) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
info.guardianproject.onionkit.R -> info.guardianproject.onionkit.a:
info.guardianproject.onionkit.R$string -> info.guardianproject.onionkit.b:
    int always -> always
    int app_name -> app_name
    int could_not_find_self_signed_certificate_in_chain -> could_not_find_self_signed_certificate_in_chain
    int error_could_not_find_cert_issuer_certificate_in_chain -> error_could_not_find_cert_issuer_certificate_in_chain
    int error_could_not_find_root_ca_issuer_certificate_in_chain -> error_could_not_find_root_ca_issuer_certificate_in_chain
    int error_does_not_contain_ -> error_does_not_contain_
    int error_domain_check_failed -> error_domain_check_failed
    int error_problem_access_local_root_ca_store -> error_problem_access_local_root_ca_store
    int error_signature_chain_verification_failed -> error_signature_chain_verification_failed
    int install_orbot_ -> install_orbot_
    int market_orbot -> market_orbot
    int no -> no
    int orbot_doesn_t_appear_to_be_running_would_you_like_to_start_it_up_and_connect_to_tor_ -> orbot_doesn_t_appear_to_be_running_would_you_like_to_start_it_up_and_connect_to_tor_
    int secure_connection_active_ -> secure_connection_active_
    int start_orbot_ -> start_orbot_
    int warning_pinned_cert_mismatch -> warning_pinned_cert_mismatch
    int warning_weak_crypto -> warning_weak_crypto
    int yes -> yes
    int you_must_have_orbot -> you_must_have_orbot
info.guardianproject.onionkit.ui.CertDisplayActivity -> info.guardianproject.onionkit.ui.CertDisplayActivity:
    android.app.AlertDialog ad -> a
    void onCreate(android.os.Bundle) -> onCreate
    void showDialog(java.lang.String) -> a
    void onPause() -> onPause
    void onDestroy() -> onDestroy
info.guardianproject.onionkit.ui.CertDisplayActivity$1 -> info.guardianproject.onionkit.ui.a:
    info.guardianproject.onionkit.ui.CertDisplayActivity this$0 -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
info.guardianproject.onionkit.ui.OrbotHelper -> info.guardianproject.onionkit.ui.b:
    android.content.Context mContext -> a
    boolean isOrbotRunning() -> a
    boolean isOrbotInstalled() -> b
    boolean isAppInstalled(java.lang.String) -> a
    void requestOrbotStart(android.app.Activity) -> a
info.guardianproject.onionkit.ui.OrbotHelper$3 -> info.guardianproject.onionkit.ui.c:
    android.app.Activity val$activity -> a
    info.guardianproject.onionkit.ui.OrbotHelper this$0 -> b
    void onClick(android.content.DialogInterface,int) -> onClick
info.guardianproject.onionkit.ui.OrbotHelper$4 -> info.guardianproject.onionkit.ui.d:
    info.guardianproject.onionkit.ui.OrbotHelper this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
info.guardianproject.onionkit.ui.TorServiceUtils -> info.guardianproject.onionkit.ui.e:
    int findProcessId(java.lang.String) -> a
    int findProcessIdWithPidOf(java.lang.String) -> b
    int findProcessIdWithPS(java.lang.String) -> c
info.guardianproject.onionkit.web.WebkitProxy -> info.guardianproject.onionkit.a.a:
    boolean setProxy(java.lang.String,android.content.Context,java.lang.String,int) -> a
    boolean setWebkitProxyGingerbread(android.content.Context,java.lang.String,int) -> a
    boolean setWebkitProxyICS(android.content.Context,java.lang.String,int) -> b
    boolean resetKitKatProxy(java.lang.String,android.content.Context) -> a
    boolean setKitKatProxy(java.lang.String,android.content.Context,java.lang.String,int) -> b
    boolean setWebkitProxyLollipop(android.content.Context,java.lang.String,int) -> c
    void resetProxy(java.lang.String,android.content.Context) -> b
    void resetProxyForICS() -> a
    void resetProxyForGingerBread(android.content.Context) -> b
    java.lang.Object getRequestQueue(android.content.Context) -> a
    java.lang.Object getDeclaredField(java.lang.Object,java.lang.String) -> a
    void setDeclaredField(java.lang.Object,java.lang.String,java.lang.Object) -> a
    java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[]) -> a
